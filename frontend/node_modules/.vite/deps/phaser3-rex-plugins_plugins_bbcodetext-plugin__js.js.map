{
  "version": 3,
  "sources": ["../../phaser3-rex-plugins/plugins/gameobjects/textbase/render/WebGLRenderer.js", "../../phaser3-rex-plugins/plugins/gameobjects/textbase/render/CanvasRenderer.js", "../../phaser3-rex-plugins/plugins/gameobjects/textbase/render/Render.js", "../../phaser3-rex-plugins/plugins/gameobjects/textbase/textstyle/MeasureTextMargins.js", "../../phaser3-rex-plugins/plugins/utils/system/CheckP3Version.js", "../../phaser3-rex-plugins/plugins/gameobjects/textbase/TextBase.js", "../../phaser3-rex-plugins/plugins/utils/canvas/GetStyle.js", "../../phaser3-rex-plugins/plugins/gameobjects/textbase/textstyle/PropertyMap.js", "../../phaser3-rex-plugins/plugins/gameobjects/textbase/textstyle/MeasureText.js", "../../phaser3-rex-plugins/plugins/gameobjects/textbase/const.js", "../../phaser3-rex-plugins/plugins/gameobjects/textbase/textstyle/WrapModes.js", "../../phaser3-rex-plugins/plugins/gameobjects/textbase/textstyle/TextStyle.js", "../../phaser3-rex-plugins/plugins/geom/roundrectangle/RoundRectangle.js", "../../phaser3-rex-plugins/plugins/utils/canvas/AddRoundRectanglePath.js", "../../phaser3-rex-plugins/plugins/utils/canvas/DrawRoundRectangle.js", "../../phaser3-rex-plugins/plugins/gameobjects/canvas/utils/DrawRoundRectangleBackground.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/textbase/canvastext/DrawMethods.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/textbase/penmanger/Pen.js", "../../phaser3-rex-plugins/plugins/utils/object/Clear.js", "../../phaser3-rex-plugins/plugins/utils/object/Clone.js", "../../phaser3-rex-plugins/plugins/utils/object/NOOP.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/textbase/penmanger/PenManager.js", "../../phaser3-rex-plugins/plugins/utils/struct/Stack.js", "../../phaser3-rex-plugins/plugins/pool.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/textbase/hitareamanager/HitAreaManager.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/textbase/canvastext/SetInteractive.js", "../../phaser3-rex-plugins/plugins/utils/string/IsASCIIString.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/textbase/wraptext/WrapText.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/textbase/canvastext/CanvasText.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/textbase/wraptext/WrapTextLinesPool.js", "../../phaser3-rex-plugins/plugins/utils/texture/imagemanager/AddImage.js", "../../phaser3-rex-plugins/plugins/utils/texture/DrawFrameToCanvas.js", "../../phaser3-rex-plugins/plugins/utils/texture/imagemanager/DrawImage.js", "../../phaser3-rex-plugins/plugins/utils/texture/imagemanager/ImageManager.js", "../../phaser3-rex-plugins/plugins/utils/texture/CopyCanvasToTexture.js", "../../phaser3-rex-plugins/plugins/utils/text/AppendText.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/textbase/Text.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/bbcodetext/parser/SplitText.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/bbcodetext/parser/TagTextToProp.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/bbcodetext/parser/PropToContextStyle.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/bbcodetext/parser/PropToTagText.js", "../../phaser3-rex-plugins/plugins/utils/string/EscapeRegex.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/bbcodetext/parser/TagRegex.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/bbcodetext/parser/Parser.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/bbcodetext/BBCodeText.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/bbcodetext/Factory.js", "../../phaser3-rex-plugins/plugins/gameobjects/tagtext/bbcodetext/Creator.js", "../../phaser3-rex-plugins/plugins/utils/object/SetValue.js", "../../phaser3-rex-plugins/plugins/bbcodetext-plugin.js"],
  "sourcesContent": ["var Utils = Phaser.Renderer.WebGL.Utils;\r\n\r\nvar WebGLRenderer = function (renderer, src, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    camera.addToRenderList(src);\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n    var pipeline = renderer.pipelines.set(src.pipeline, src);\r\n    var textureUnit = pipeline.setTexture2D(frame.glTexture, src);\r\n\r\n    renderer.pipelines.preBatch(src);\r\n\r\n    pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src.tintTopLeft, camera.alpha * src._alphaTL),\r\n        getTint(src.tintTopRight, camera.alpha * src._alphaTR),\r\n        getTint(src.tintBottomLeft, camera.alpha * src._alphaBL),\r\n        getTint(src.tintBottomRight, camera.alpha * src._alphaBR),\r\n        src.tintFill,\r\n        0, 0,\r\n        camera,\r\n        parentMatrix,\r\n        false,\r\n        textureUnit\r\n    );\r\n\r\n    renderer.pipelines.postBatch(src);\r\n};\r\n\r\nexport default  WebGLRenderer;\r\n", "var CanvasRenderer = function (renderer, src, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    camera.addToRenderList(src);\r\n\r\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\r\n};\r\n\r\nexport default CanvasRenderer;\r\n", "import WebGLRenderer from './WebGLRenderer.js';\r\nimport CanvasRenderer from './CanvasRenderer.js';\r\n\r\nexport default {\r\n    renderWebGL: WebGLRenderer,\r\n    renderCanvas: CanvasRenderer\r\n\r\n};", "const CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\nvar MeasureTextMargins = function (textStyle, testString, out) {\r\n    if (out === undefined) {\r\n        out = {};\r\n    }\r\n\r\n    var canvas = CanvasPool.create(this);\r\n    var context = canvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var metrics = context.measureText(testString);\r\n\r\n    var width = Math.ceil(metrics.width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    out.left = 0;\r\n\r\n    if ((width === 0) || (height === 0) || !context.getImageData(0, 0, width, height)) {\r\n        CanvasPool.remove(canvas);\r\n        return out;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var stop = false;\r\n    for (var x = 0; x < width; x++) {\r\n        for (var y = 0; y < height; y++) {\r\n            var idx = (y * width + x) * 4;\r\n            if (imagedata[idx] !== 255) {\r\n                out.left = x;\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n        if (stop) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    CanvasPool.remove(canvas);\r\n    return out;\r\n}\r\n\r\nexport default MeasureTextMargins;", "const MinVersion = 60;\r\n\r\nvar IsChecked = false;\r\n\r\nvar CheckP3Version = function (minVersion) {\r\n    if (IsChecked) {\r\n        return;\r\n    }\r\n\r\n    if (minVersion === undefined) {\r\n        minVersion = MinVersion;\r\n    }\r\n    var currentVersion = parseInt(Phaser.VERSION.match(/\\.(\\d+)\\./)[1]);\r\n    if (currentVersion < minVersion) {\r\n        console.error(`Minimum supported version : 3.${minVersion}`)\r\n    }\r\n\r\n    IsChecked = true;\r\n}\r\n\r\nexport default CheckP3Version;", "import Render from './render/Render.js';\r\nimport MeasureTextMargins from './textstyle/MeasureTextMargins.js';\r\n\r\nimport CheckP3Version from '../../utils/system/CheckP3Version.js';\r\nCheckP3Version();\r\n\r\nconst GameObject = Phaser.GameObjects.GameObject;\r\n\r\nclass TextBase extends GameObject {\r\n\r\n    setStyle(style) {\r\n        return this.style.setStyle(style);\r\n    }\r\n\r\n    setFont(font) {\r\n        return this.style.setFont(font);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        return this.style.setFontFamily(family);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        return this.style.setFontSize(size);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        return this.style.setFontStyle(style);\r\n    }\r\n\r\n    setTestString(string) {\r\n        return this.style.setTestString(string);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        return this.style.setFixedSize(width, height);\r\n    }\r\n\r\n    setBackgroundColor(color, color2, isHorizontalGradient) {\r\n        return this.style.setBackgroundColor(color, color2, isHorizontalGradient);\r\n    }\r\n\r\n    setBackgroundStrokeColor(color, lineWidth) {\r\n        return this.style.setBackgroundStrokeColor(color, lineWidth);\r\n    }\r\n\r\n    setBackgroundCornerRadius(radius, iteration) {\r\n        return this.style.setBackgroundCornerRadius(radius, iteration);\r\n    }\r\n\r\n    setFill(color) {\r\n        return this.style.setFill(color);\r\n    }\r\n\r\n    setColor(color) {\r\n        return this.style.setColor(color);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        return this.style.setStroke(color, thickness);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        return this.style.setShadow(x, y, color, blur, shadowStroke, shadowFill);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        return this.style.setShadowOffset(x, y);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        return this.style.setShadowColor(color);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        return this.style.setShadowBlur(blur);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        return this.style.setShadowStroke(enabled);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        return this.style.setShadowFill(enabled);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        return this.style.setWrapMode(mode);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        return this.style.setWrapWidth(width);\r\n    }\r\n\r\n    // Align with built-in text game object\r\n    setWordWrapWidth(width) {\r\n        return this.style.setWrapWidth(width);\r\n    }\r\n\r\n    setAlign(align) {\r\n        return this.style.setHAlign(align);\r\n    }\r\n    setHAlign(align) {\r\n        return this.style.setHAlign(align);\r\n    }\r\n    setVAlign(align) {\r\n        return this.style.setVAlign(align);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        this.lineSpacing = value;\r\n        this.updateText(false);\r\n        return this;\r\n    }\r\n\r\n    setXOffset(value) {\r\n        return this.style.setXOffset(value);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        return this.style.setMaxLines(max);\r\n    }\r\n\r\n    setResolution(value) {\r\n        return this.style.setResolution(value);\r\n    }\r\n\r\n    getTextMetrics() {\r\n        return this.style.getTextMetrics();\r\n    }\r\n\r\n    setTextMetrics(metrics, font) {\r\n        return this.style.setTextMetrics(metrics, font);\r\n    }\r\n\r\n    measureTextMargins(testString, out) {\r\n        return MeasureTextMargins(this.style, testString, out);\r\n    }\r\n\r\n}\r\n\r\nconst Components = Phaser.GameObjects.Components;\r\nPhaser.Class.mixin(TextBase,\r\n    [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.ComputedSize,\r\n        Components.Crop,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Mask,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.PostPipeline,\r\n        Components.ScrollFactor,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        Render\r\n    ]\r\n);\r\nexport default TextBase;", "const Pad = Phaser.Utils.String.Pad;\r\nvar GetStyle = function (style, canvas, context) {\r\n    if (style == null) {\r\n        return style;\r\n    }\r\n\r\n    switch (typeof (style)) {\r\n        case 'string': return style;\r\n        case 'number': return `#${Pad(Math.floor(style).toString(16), 6, '0', 1)}`;\r\n        case 'function': return style(canvas, context);\r\n        case 'object':\r\n            if (style.hasOwnProperty('r')) {\r\n                if (style.hasOwnProperty('a')) {  // rgba\r\n                    return `rgba(${style.r},${style.g},${style.b},${style.a})`;\r\n                } else {  // rgb\r\n                    return `rgb(${style.r},${style.g},${style.b})`;\r\n                }\r\n            } else if (style.hasOwnProperty('h')) {\r\n                if (style.hasOwnProperty('a')) {  // hsla\r\n                    return `hsla(${style.h},${style.s},${style.l},${style.a})`;\r\n                } else {  // hsl\r\n                    return `hsl(${style.h},${style.s},${style.l})`;\r\n                }\r\n            } else {\r\n                return style; // Not a valid input\r\n            }\r\n        default: return style;\r\n    }\r\n}\r\n\r\nexport default GetStyle;", "import GetStyle from '../../../utils/canvas/GetStyle.js';\r\n\r\n//  Key: [ Object Key, Default Value, postCallback ]\r\n\r\nvar PropertyMap = {\r\n    // background\r\n    backgroundColor: ['backgroundColor', null, GetStyle],\r\n    backgroundColor2: ['backgroundColor2', null, GetStyle],\r\n    backgroundHorizontalGradient: ['backgroundHorizontalGradient', true, null],\r\n    backgroundStrokeColor: ['backgroundStrokeColor', null, GetStyle],\r\n    backgroundStrokeLineWidth: ['backgroundStrokeLineWidth', 2, null],\r\n    backgroundCornerRadius: ['backgroundCornerRadius', 0, null],\r\n    backgroundCornerIteration: ['backgroundCornerIteration', null, null],\r\n\r\n    // font\r\n    fontFamily: ['fontFamily', 'Courier', null],\r\n    fontSize: ['fontSize', '16px', null],\r\n    fontStyle: ['fontStyle', '', null],\r\n    color: ['color', '#fff', GetStyle],\r\n    stroke: ['stroke', '#fff', GetStyle],\r\n    strokeThickness: ['strokeThickness', 0, null],\r\n    shadowOffsetX: ['shadow.offsetX', 0, null],\r\n    shadowOffsetY: ['shadow.offsetY', 0, null],\r\n    shadowColor: ['shadow.color', '#000', GetStyle],\r\n    shadowBlur: ['shadow.blur', 0, null],\r\n    shadowStroke: ['shadow.stroke', false, null],\r\n    shadowFill: ['shadow.fill', false, null],\r\n\r\n    // underline\r\n    underlineColor: ['underline.color', '#000', GetStyle],\r\n    underlineThickness: ['underline.thickness', 0, null],\r\n    underlineOffset: ['underline.offset', 0, null],\r\n\r\n    // strikethrough\r\n    strikethroughColor: ['strikethrough.color', '#000', GetStyle],\r\n    strikethroughThickness: ['strikethrough.thickness', 0, null],\r\n    strikethroughOffset: ['strikethrough.offset', 0, null],\r\n\r\n    // align\r\n    halign: ['halign', 'left', null],\r\n    valign: ['valign', 'top', null],\r\n\r\n    // size\r\n    maxLines: ['maxLines', 0, null],\r\n    fixedWidth: ['fixedWidth', 0, null],\r\n    fixedHeight: ['fixedHeight', 0, null],\r\n    resolution: ['resolution', 0, null],\r\n    lineSpacing: ['lineSpacing', 0, null],\r\n    xOffset: ['xOffset', 0, null],\r\n\r\n    rtl: ['rtl', false, null],\r\n    testString: ['testString', '|M\u00C3\u2030qgy', null],\r\n    baselineX: ['baselineX', 1.2, null],\r\n    baselineY: ['baselineY', 1.4, null],\r\n\r\n    // wrap\r\n    wrapMode: ['wrap.mode', 0, null],\r\n    wrapWidth: ['wrap.width', 0, null],\r\n    wrapCallback: ['wrap.callback', null],\r\n    wrapCallbackScope: ['wrap.callbackScope', null],\r\n};\r\n\r\nexport default PropertyMap;", "/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\n/**\r\n * Calculates the ascent, descent and fontSize of a given font style.\r\n *\r\n * @function Phaser.GameObjects.MeasureText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Text.TextStyle} textStyle - The TextStyle object to measure.\r\n *\r\n * @return {object} An object containing the ascent, descent and fontSize of the TextStyle.\r\n */\r\nvar MeasureText = function (textStyle) {\r\n    // @property {HTMLCanvasElement} canvas - The canvas element that the text is rendered.\r\n    var canvas = CanvasPool.create(this);\r\n\r\n    // @property {HTMLCanvasElement} context - The context of the canvas element that the text is rendered to.\r\n    var context = canvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var metrics = context.measureText(textStyle.testString);\r\n\r\n    if ('actualBoundingBoxAscent' in metrics) {\r\n        var ascent = metrics.actualBoundingBoxAscent;\r\n        var descent = metrics.actualBoundingBoxDescent;\r\n\r\n        var output = {\r\n            ascent: ascent,\r\n            descent: descent,\r\n            fontSize: (ascent + descent)\r\n        };\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var width = Math.ceil(metrics.width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    var output = {\r\n        ascent: 0,\r\n        descent: 0,\r\n        fontSize: 0\r\n    };\r\n\r\n    if (!context.getImageData(0, 0, width, height)) {\r\n        output.ascent = baseline;\r\n        output.descent = baseline + 6;\r\n        output.fontSize = output.ascent + output.descent;\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var pixels = imagedata.length;\r\n    var line = width * 4;\r\n    var i;\r\n    var j;\r\n    var idx = 0;\r\n    var stop = false;\r\n\r\n    // ascent. scan from top to bottom until we find a non red pixel\r\n    for (i = 0; i < baseline; i++) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx += line;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.ascent = baseline - i;\r\n\r\n    idx = pixels - line;\r\n    stop = false;\r\n\r\n    // descent. scan from bottom to top until we find a non red pixel\r\n    for (i = height; i > baseline; i--) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx -= line;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.descent = (i - baseline);\r\n    output.fontSize = output.ascent + output.descent;\r\n\r\n    CanvasPool.remove(canvas);\r\n\r\n    return output;\r\n};\r\n\r\nexport default MeasureText;", "var CONST = {\r\n    // new line mode\r\n    NO_NEWLINE: 0,\r\n    RAW_NEWLINE: 1,\r\n    WRAPPED_NEWLINE: 2,\r\n\r\n    // wrap mode\r\n    NO_WRAP: 0,\r\n    WORD_WRAP: 1,\r\n    CHAR_WRAP: 2,\r\n    MIX_WRAP: 3,\r\n\r\n    // split lines\r\n    SPLITREGEXP: /(?:\\r\\n|\\r|\\n)/\r\n};\r\n\r\nexport default CONST;", "import CONST from '../const.js';\r\n\r\nconst WRAPMODE = {\r\n    none: CONST.NO_WRAP,\r\n    word: CONST.WORD_WRAP,\r\n    char: CONST.CHAR_WRAP,\r\n    character: CONST.CHAR_WRAP,\r\n    mix: CONST.MIX_WRAP\r\n};\r\n\r\nexport default WRAPMODE;", "import DefaultPropertyMap from './PropertyMap.js';\r\nimport MeasureText from './MeasureText.js';\r\nimport CONST from '../const.js';\r\nimport WRAPMODE from './WrapModes.js';\r\nimport GetStyle from '../../../utils/canvas/GetStyle.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TextStyle {\r\n    constructor(text, style, propertyMap) {\r\n        this.parent = text;\r\n        // parent.updateText()\r\n        // parent.width, parent.height\r\n\r\n        if (propertyMap === undefined) {\r\n            propertyMap = DefaultPropertyMap;\r\n        }\r\n        this.propertyMap = propertyMap;\r\n\r\n        this.backgroundColor;\r\n        this.backgroundColor2;\r\n        this.backgroundHorizontalGradient;\r\n        this.backgroundStrokeColor;\r\n        this.backgroundStrokeLineWidth;\r\n        this.backgroundCornerRadius;\r\n        this.backgroundCornerIteration;\r\n\r\n        this.fontFamily;\r\n        this.fontSize;\r\n        this.fontStyle;\r\n        this.color;\r\n        this.stroke;\r\n        this.strokeThickness;\r\n        this.shadowOffsetX;\r\n        this.shadowOffsetY;\r\n        this.shadowColor;\r\n        this.shadowBlur;\r\n        this.shadowStroke;\r\n        this.shadowFill;\r\n\r\n        this.underlineColor;\r\n        this.underlineThickness;\r\n        this.underlineOffset;\r\n\r\n        this.strikethroughColor;\r\n        this.strikethroughThickness;\r\n        this.strikethroughOffset;\r\n\r\n        this.halign;\r\n        this.valign;\r\n\r\n        this.maxLines;\r\n        this.fixedWidth;\r\n        this.fixedHeight;\r\n        this.resolution;\r\n        this.xOffset;\r\n\r\n        this.rtl;\r\n        this.testString;\r\n\r\n        this.baselineX;\r\n        this.baselineY;\r\n\r\n        this.wrapMode;\r\n        this.wrapWidth;\r\n        this.wrapCallback;\r\n        this.wrapCallbackScope;\r\n\r\n        this._font;\r\n\r\n        //  Set to defaults + user style\r\n        this.setStyle(style, false, true);\r\n    }\r\n\r\n    get isWrapFitMode() {\r\n        return (this.fixedWidth > 0) && (this.wrapMode !== CONST.NO_WRAP) && (this.wrapWidth === 0);\r\n    }\r\n\r\n    setStyle(style, updateText, setDefaults) {\r\n        if (updateText === undefined) {\r\n            updateText = true;\r\n        }\r\n        if (setDefaults === undefined) {\r\n            setDefaults = false;\r\n        }\r\n\r\n        // Compatible with Text game object\r\n        if (style && style.hasOwnProperty('wordWrap')) {\r\n            var wordWrap = style.wordWrap;\r\n            if (wordWrap.hasOwnProperty('width')) {\r\n                style.wrap = {\r\n                    mode: 'word',\r\n                    width: wordWrap.width,\r\n                }\r\n            }\r\n        }\r\n\r\n        if (style && style.hasOwnProperty('wrap')) {\r\n            var wrap = style.wrap;\r\n            if (wrap.hasOwnProperty('mode')) {\r\n                var mode = wrap.mode;\r\n                if (typeof mode === 'string') {\r\n                    wrap.mode = WRAPMODE[mode];\r\n                }\r\n            } else {\r\n                if (wrap.hasOwnProperty('width')) {\r\n                    wrap.mode = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        // default halign of RTL is 'right'\r\n        if (style && style.rtl && setDefaults && (!style.hasOwnProperty('halign'))) {\r\n            style.halign = 'right';\r\n        }\r\n\r\n        //  Avoid type mutation\r\n        if (style && style.hasOwnProperty('fontSize') && typeof style.fontSize === 'number') {\r\n            style.fontSize = style.fontSize.toString() + 'px';\r\n        }\r\n\r\n        var propertyMap = this.propertyMap;\r\n        for (var key in propertyMap) {\r\n            var prop = propertyMap[key];  // [ Object Key, Default Value, preCallback ]\r\n            var objKey = prop[0];\r\n            var defaultValue = (setDefaults) ? prop[1] : this[key];\r\n            var postCallback = prop[2];\r\n\r\n\r\n            if (key === 'wrapCallback' || key === 'wrapCallbackScope') {\r\n                // Callback & scope should be set without processing the values\r\n                this[key] = GetValue(style, objKey, defaultValue);\r\n            } else {\r\n                var value = GetAdvancedValue(style, objKey, defaultValue);\r\n                if (postCallback) {\r\n                    value = postCallback(value);\r\n                }\r\n                this[key] = value;\r\n            }\r\n\r\n        }\r\n\r\n        //  Allow for 'font' override\r\n        var font = GetValue(style, 'font', null);\r\n\r\n        if (font === null) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        } else {\r\n            this._font = font;\r\n        }\r\n\r\n        //  Allow for 'fill' to be used in place of 'color'\r\n        var fill = GetValue(style, 'fill', null);\r\n\r\n        if (fill !== null) {\r\n            this.color = GetStyle(fill);\r\n        }\r\n\r\n        var metrics = GetValue(style, 'metrics', false);\r\n\r\n        //  Provide optional TextMetrics in the style object to avoid the canvas look-up / scanning\r\n        //  Doing this is reset if you then change the font of this TextStyle after creation\r\n        if (metrics) {\r\n            this.metrics = {\r\n                ascent: GetValue(metrics, 'ascent', 0),\r\n                descent: GetValue(metrics, 'descent', 0),\r\n                fontSize: GetValue(metrics, 'fontSize', 0)\r\n            };\r\n        } else if (updateText || (!this.metrics)) {\r\n            this.metrics = MeasureText(this);\r\n        }\r\n\r\n        if (updateText) {\r\n            return this.parent.updateText();\r\n        } else {\r\n            return this.parent;\r\n        }\r\n    }\r\n\r\n    syncFont(canvas, context) {\r\n        context.font = this._font;\r\n    }\r\n\r\n    syncStyle(canvas, context) {\r\n        context.textBaseline = 'alphabetic';\r\n\r\n        context.fillStyle = this.color;\r\n        context.strokeStyle = this.stroke;\r\n\r\n        context.lineWidth = this.strokeThickness;\r\n        context.lineCap = 'round';\r\n        context.lineJoin = 'round';\r\n    }\r\n\r\n    syncShadow(context, enabled) {\r\n        if (enabled) {\r\n            context.shadowOffsetX = this.shadowOffsetX;\r\n            context.shadowOffsetY = this.shadowOffsetY;\r\n            context.shadowColor = this.shadowColor;\r\n            context.shadowBlur = this.shadowBlur;\r\n        } else {\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n            context.shadowColor = 0;\r\n            context.shadowBlur = 0;\r\n        }\r\n    }\r\n\r\n    update(recalculateMetrics) {\r\n        if (recalculateMetrics) {\r\n            this._font = `${this.fontStyle} ${this.fontSize} ${this.fontFamily}`.trim();\r\n\r\n            this.metrics = MeasureText(this);\r\n        }\r\n\r\n        return this.parent.updateText(recalculateMetrics);\r\n    }\r\n\r\n    buildFont() {\r\n        var newFont = `${this.fontStyle} ${this.fontSize} ${this.fontFamily}`.trim();\r\n        if (newFont !== this._font) {\r\n            this._font = newFont;\r\n            //this.metrics = MeasureText(this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setFont(font) {\r\n        if (typeof font === 'string') {\r\n            this.fontFamily = font;\r\n            this.fontSize = '';\r\n            this.fontStyle = '';\r\n        } else {\r\n            this.fontFamily = GetValue(font, 'fontFamily', 'Courier');\r\n            this.fontSize = GetValue(font, 'fontSize', '16px');\r\n            this.fontStyle = GetValue(font, 'fontStyle', '');\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        this.fontFamily = family;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        this.fontStyle = style;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        if (typeof size === 'number') {\r\n            size = size.toString() + 'px';\r\n        }\r\n\r\n        this.fontSize = size;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setTestString(string) {\r\n        this.testString = string;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        this.fixedWidth = width;\r\n        this.fixedHeight = height;\r\n\r\n        if (width) {\r\n            this.parent.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.parent.height = height;\r\n        }\r\n\r\n        return this.update(this.isWrapFitMode);\r\n    }\r\n\r\n    setResolution(value) {\r\n        this.resolution = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setXOffset(value) {\r\n        this.xOffset = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundColor(color, color2, isHorizontalGradient) {\r\n        if (isHorizontalGradient === undefined) {\r\n            isHorizontalGradient = true;\r\n        }\r\n\r\n        this.backgroundColor = GetStyle(color, this.parent.canvas, this.parent.context);\r\n        this.backgroundColor2 = GetStyle(color2, this.parent.canvas, this.parent.context);\r\n        this.backgroundHorizontalGradient = isHorizontalGradient;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundStrokeColor(color, lineWidth) {\r\n        this.backgroundStrokeColor = GetStyle(color, this.parent.canvas, this.parent.context);\r\n        this.backgroundStrokeLineWidth = lineWidth;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundCornerRadius(radius, iteration) {\r\n        this.backgroundCornerRadius = radius;\r\n        this.backgroundCornerIteration = iteration;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setFill(color) {\r\n        this.color = GetStyle(color, this.parent.canvas, this.parent.context);\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = GetStyle(color, this.parent.canvas, this.parent.context);\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        if (color === undefined) {\r\n            //  Reset the stroke to zero (disabling it)\r\n            this.strokeThickness = 0;\r\n        } else {\r\n            if (thickness === undefined) {\r\n                thickness = this.strokeThickness;\r\n            }\r\n\r\n            this.stroke = GetStyle(color, this.parent.canvas, this.parent.context);\r\n            this.strokeThickness = thickness;\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n        if (shadowStroke === undefined) {\r\n            shadowStroke = false;\r\n        }\r\n        if (shadowFill === undefined) {\r\n            shadowFill = true;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n        this.shadowColor = GetStyle(color, this.parent.canvas, this.parent.context);\r\n        this.shadowBlur = blur;\r\n        this.shadowStroke = shadowStroke;\r\n        this.shadowFill = shadowFill;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.shadowColor = GetStyle(color, this.parent.canvas, this.parent.context);\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n\r\n        this.shadowBlur = blur;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        this.shadowStroke = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        this.shadowFill = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderline(color, thickness, offset) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineColor = GetStyle(color, this.parent.canvas, this.parent.context);\r\n        this.underlineThickness = thickness;\r\n        this.underlineOffset = offset;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.underlineColor = GetStyle(color, this.parent.canvas, this.parent.context);\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineThickness(thickness) {\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n\r\n        this.underlineThickness = thickness;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineOffset(offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineOffset = offset;\r\n        return this.update(false);\r\n    }\r\n\r\n    setStrikethrough(color, thickness, offset) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.strikethroughColor = GetStyle(color, this.parent.canvas, this.parent.context);\r\n        this.strikethroughThickness = thickness;\r\n        this.strikethroughOffset = offset;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setStrikethroughColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.strikethroughColor = GetStyle(color, this.parent.canvas, this.parent.context);\r\n        return this.update(false);\r\n    }\r\n\r\n    setStrikethroughThickness(thickness) {\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n\r\n        this.strikethroughThickness = thickness;\r\n        return this.update(false);\r\n    }\r\n\r\n    setStrikethroughOffset(offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.strikethroughOffset = offset;\r\n        return this.update(false);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        if (typeof mode === 'string') {\r\n            mode = WRAPMODE[mode.toLowerCase()] || 0;\r\n        }\r\n        this.wrapMode = mode;\r\n        return this.update(true);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        this.wrapWidth = width;\r\n        return this.update(false);\r\n    }\r\n\r\n    setAlign(halign, valign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.halign = halign;\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setHAlign(halign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        this.halign = halign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setVAlign(valign) {\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        if (max === undefined) {\r\n            max = 0;\r\n        }\r\n\r\n        this.maxLines = max;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    getTextMetrics() {\r\n        var metrics = this.metrics;\r\n\r\n        return {\r\n            ascent: metrics.ascent,\r\n            descent: metrics.descent,\r\n            fontSize: metrics.fontSize\r\n        };\r\n    }\r\n\r\n    setTextMetrics(metrics, font) {\r\n        this.metrics.ascent = metrics.ascent;\r\n        this.metrics.descent = metrics.descent;\r\n        this.metrics.fontSize = metrics.fontSize;\r\n\r\n        if (font) {\r\n            if (typeof font === 'string') {\r\n                this.fontFamily = font;\r\n                this.fontSize = '';\r\n                this.fontStyle = '';\r\n            } else {\r\n                this.fontFamily = GetValue(font, 'fontFamily', this.fontFamily);\r\n                this.fontSize = GetValue(font, 'fontSize', this.fontSize);\r\n                this.fontStyle = GetValue(font, 'fontStyle', this.fontStyle);\r\n            }\r\n        }\r\n\r\n        return this.parent.updateText(true);\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this.metrics.fontSize + this.strokeThickness + this.parent.lineSpacing;\r\n    }\r\n\r\n    toJSON() {\r\n        var output = {};\r\n\r\n        var propertyMap = this.propertyMap;\r\n        for (var key in propertyMap) {\r\n            output[key] = this[key];\r\n        }\r\n\r\n        output.metrics = this.getTextMetrics();\r\n\r\n        return output;\r\n    }\r\n\r\n    destroy() {\r\n        this.parent = undefined;\r\n    }\r\n\r\n}\r\n\r\nexport default TextStyle;", "const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass RoundRectangle {\r\n    constructor(x, y, width, height, radiusConfig) {\r\n        if (x === undefined) { x = 0; }\r\n        if (y === undefined) { y = x; }\r\n        if (width === undefined) { width = 0; }\r\n        if (height === undefined) { height = 0; }\r\n        if (radiusConfig === undefined) { radiusConfig = 0; }\r\n\r\n        this.cornerRadius = {};\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this.setTo(x, y, width, height, radiusConfig);\r\n    }\r\n\r\n    setTo(x, y, width, height, radiusConfig) {\r\n        this.setPosition(x, y);\r\n        this.setRadius(radiusConfig);\r\n        this.setSize(width, height);\r\n        return this;\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    setRadius(value) {\r\n        if (value === undefined) {\r\n            value = 0;\r\n        }\r\n        this.radius = value;\r\n        return this;\r\n    }\r\n\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    get minWidth() {\r\n        var radius = this.cornerRadius;\r\n        return Math.max(radius.tl.x + radius.tr.x, radius.bl.x + radius.br.x);\r\n    }\r\n\r\n    get minHeight() {\r\n        var radius = this.cornerRadius;\r\n        return Math.max(radius.tl.y + radius.bl.y, radius.tr.y + radius.br.y);\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value) {\r\n        if (value == null) {\r\n            value = 0;\r\n        }\r\n        this._width = Math.max(value, this.minWidth);\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value) {\r\n        if (value == null) {\r\n            value = 0;\r\n        }\r\n        this._height = Math.max(value, this.minHeight);\r\n    }\r\n\r\n    get radius() {\r\n        var radius = this.cornerRadius;\r\n        return Math.max(\r\n            radius.tl.x, radius.tl.y,\r\n            radius.tr.x, radius.tr.y,\r\n            radius.bl.x, radius.bl.y,\r\n            radius.br.x, radius.br.y\r\n        );\r\n    }\r\n\r\n    set radius(value) {\r\n        var defaultRadiusX, defaultRadiusY;\r\n        if (typeof (value) === 'number') {\r\n            defaultRadiusX = value;\r\n            defaultRadiusY = value;\r\n        } else {\r\n            defaultRadiusX = GetValue(value, 'x', 0);\r\n            defaultRadiusY = GetValue(value, 'y', 0);\r\n        }\r\n\r\n        var radius = this.cornerRadius;\r\n        radius.tl = GetRadius(GetValue(value, 'tl', undefined), defaultRadiusX, defaultRadiusY);\r\n        radius.tr = GetRadius(GetValue(value, 'tr', undefined), defaultRadiusX, defaultRadiusY);\r\n        radius.bl = GetRadius(GetValue(value, 'bl', undefined), defaultRadiusX, defaultRadiusY);\r\n        radius.br = GetRadius(GetValue(value, 'br', undefined), defaultRadiusX, defaultRadiusY);\r\n    }\r\n\r\n    get radiusTL() {\r\n        var radius = this.cornerRadius.tl;\r\n        return Math.max(radius.x, radius.y);\r\n    }\r\n\r\n    set radiusTL(value) {\r\n        SetRadius(this.cornerRadius.tl, value);\r\n    }\r\n\r\n    get radiusTR() {\r\n        var radius = this.cornerRadius.tr;\r\n        return Math.max(radius.x, radius.y);\r\n    }\r\n\r\n    set radiusTR(value) {\r\n        SetRadius(this.cornerRadius.tr, value);\r\n    }\r\n\r\n    get radiusBL() {\r\n        var radius = this.cornerRadius.bl;\r\n        return Math.max(radius.x, radius.y);\r\n    }\r\n\r\n    set radiusBL(value) {\r\n        SetRadius(this.cornerRadius.bl, value);\r\n    }\r\n\r\n    get radiusBR() {\r\n        var radius = this.cornerRadius.br;\r\n        return Math.max(radius.x, radius.y);\r\n    }\r\n\r\n    set radiusBR(value) {\r\n        SetRadius(this.cornerRadius.br, value);\r\n    }\r\n}\r\n\r\nvar GetRadius = function (radius, defaultRadiusX, defaultRadiusY) {\r\n    if (radius === undefined) {\r\n        radius = {\r\n            x: defaultRadiusX,\r\n            y: defaultRadiusY\r\n        };\r\n    } else if (typeof (radius) === 'number') {\r\n        radius = {\r\n            x: radius,\r\n            y: radius\r\n        };\r\n    }\r\n\r\n    SetConvex(radius);\r\n    return radius;\r\n\r\n}\r\n\r\nvar SetRadius = function (radius, value) {\r\n    if (typeof (value) === 'number') {\r\n        radius.x = value;\r\n        radius.y = value;\r\n    } else {\r\n        radius.x = GetValue(value, 'x', 0);\r\n        radius.y = GetValue(value, 'y', 0);\r\n    }\r\n\r\n    SetConvex(radius);\r\n}\r\n\r\nvar SetConvex = function (radius) {\r\n    radius.convex = (radius.x >= 0) || (radius.y >= 0);\r\n\r\n    radius.x = Math.abs(radius.x);\r\n    radius.y = Math.abs(radius.y);\r\n}\r\n\r\nexport default RoundRectangle;", "import RoundRectangle from '../../geom/roundrectangle/RoundRectangle.js';\r\n\r\nconst DegToRad = Phaser.Math.DegToRad;\r\n\r\nvar AddRoundRectanglePath = function (context, x, y, width, height, radiusConfig, iteration) {\r\n    var geom = new RoundRectangle(x, y, width, height, radiusConfig),\r\n        minWidth = geom.minWidth,\r\n        minHeight = geom.minHeight,\r\n        scaleRX = (width >= minWidth) ? 1 : (width / minWidth),\r\n        scaleRY = (height >= minHeight) ? 1 : (height / minHeight);\r\n\r\n    var cornerRadius = geom.cornerRadius;\r\n    var radius, radiusX, radiusY, centerX, centerY;\r\n    var startX, startY;\r\n\r\n    context.save();\r\n    context.beginPath();\r\n\r\n    context.translate(x, y);\r\n\r\n    // Top-left\r\n    radius = cornerRadius.tl;\r\n    if (IsArcCorner(radius)) {\r\n        radiusX = radius.x * scaleRX;\r\n        radiusY = radius.y * scaleRY;\r\n        if (IsConvexArc(radius)) {\r\n            centerX = radiusX;\r\n            centerY = radiusY;\r\n            ArcTo(context, centerX, centerY, radiusX, radiusY, 180, 270, false, iteration);\r\n        } else {\r\n            centerX = 0;\r\n            centerY = 0;\r\n            ArcTo(context, centerX, centerY, radiusX, radiusY, 90, 0, true, iteration);\r\n        }\r\n\r\n        startX = 0;\r\n        startY = radiusY;\r\n    } else {\r\n        context.lineTo(0, 0);\r\n\r\n        startX = 0;\r\n        startY = 0;\r\n    }\r\n\r\n    // Top-right\r\n    radius = cornerRadius.tr;\r\n    if (IsArcCorner(radius)) {\r\n        radiusX = radius.x * scaleRX;\r\n        radiusY = radius.y * scaleRY;\r\n        if (IsConvexArc(radius)) {\r\n            centerX = width - radiusX;\r\n            centerY = radiusY;\r\n            ArcTo(context, centerX, centerY, radiusX, radiusY, 270, 360, false, iteration);\r\n        } else {\r\n            centerX = width;\r\n            centerY = 0;\r\n            ArcTo(context, centerX, centerY, radiusX, radiusY, 180, 90, true, iteration);\r\n        }\r\n    } else {\r\n        context.lineTo(width, 0);\r\n    }\r\n\r\n    // Bottom-right\r\n    radius = cornerRadius.br;\r\n    if (IsArcCorner(radius)) {\r\n        radiusX = radius.x * scaleRX;\r\n        radiusY = radius.y * scaleRY;\r\n        if (IsConvexArc(radius)) {\r\n            centerX = width - radiusX;\r\n            centerY = height - radiusY;\r\n            ArcTo(context, centerX, centerY, radiusX, radiusY, 0, 90, false, iteration);\r\n        } else {\r\n            centerX = width;\r\n            centerY = height;\r\n            ArcTo(context, centerX, centerY, radiusX, radiusY, 270, 180, true, iteration);\r\n        }\r\n    } else {\r\n        context.lineTo(width, height);\r\n    }\r\n\r\n    // Bottom-left\r\n    radius = cornerRadius.bl;\r\n    if (IsArcCorner(radius)) {\r\n        radiusX = radius.x * scaleRX;\r\n        radiusY = radius.y * scaleRY;\r\n        if (IsConvexArc(radius)) {\r\n            centerX = radiusX;\r\n            centerY = height - radiusY;\r\n            ArcTo(context, centerX, centerY, radiusX, radiusY, 90, 180, false, iteration);\r\n        } else {\r\n            centerX = 0;\r\n            centerY = height;\r\n            ArcTo(context, centerX, centerY, radiusX, radiusY, 360, 270, true, iteration);\r\n        }\r\n    } else {\r\n        context.lineTo(0, height);\r\n    }\r\n\r\n    context.lineTo(startX, startY);\r\n    context.closePath();\r\n    context.restore();\r\n}\r\n\r\nvar IsConvexArc = function (radius) {\r\n    return (!radius.hasOwnProperty('convex')) ||  // radius does not have convex property\r\n        radius.convex;\r\n}\r\n\r\nvar IsArcCorner = function (radius) {\r\n    return ((radius.x > 0) && (radius.y > 0));\r\n}\r\n\r\nvar ArcTo = function (\r\n    context,\r\n    centerX, centerY,\r\n    radiusX, radiusY,\r\n    startAngle, endAngle,\r\n    antiClockWise,\r\n    iteration\r\n) {\r\n\r\n    // startAngle, endAngle: 0 ~ 360\r\n    if (antiClockWise && (endAngle > startAngle)) {\r\n        endAngle -= 360;\r\n    } else if (!antiClockWise && (endAngle < startAngle)) {\r\n        endAngle += 360;\r\n    }\r\n\r\n    startAngle = DegToRad(startAngle);\r\n    endAngle = DegToRad(endAngle);\r\n\r\n    if (iteration == null) {  // undefined, or null\r\n        context.ellipse(centerX, centerY, radiusX, radiusY, 0, startAngle, endAngle, antiClockWise);\r\n    } else {\r\n        iteration += 1;\r\n        var x, y, angle;\r\n        var step = (endAngle - startAngle) / iteration;\r\n        for (var i = 0; i <= iteration; i++) {\r\n            angle = startAngle + (step * i);\r\n            x = centerX + (radiusX * Math.cos(angle));\r\n            y = centerY + (radiusY * Math.sin(angle));\r\n            context.lineTo(x, y);\r\n        }\r\n    }\r\n}\r\n\r\nexport default AddRoundRectanglePath;", "import AddRoundRectanglePath from './AddRoundRectanglePath.js'\r\n\r\nvar DrawRoundRectangle = function (\r\n    canvas, context,\r\n    x, y,\r\n    width, height, radiusConfig,\r\n    fillStyle, strokeStyle, lineWidth, fillColor2, isHorizontalGradient,\r\n    iteration\r\n) {\r\n\r\n    AddRoundRectanglePath(context, x, y, width, height, radiusConfig, iteration);\r\n\r\n    if (fillStyle != null) {\r\n        if (fillColor2 != null) {\r\n            var grd;\r\n            if (isHorizontalGradient) {\r\n                grd = context.createLinearGradient(0, 0, width, 0);\r\n            } else {\r\n                grd = context.createLinearGradient(0, 0, 0, height);\r\n            }\r\n            grd.addColorStop(0, fillStyle);\r\n            grd.addColorStop(1, fillColor2);\r\n            fillStyle = grd;\r\n        }\r\n\r\n        context.fillStyle = fillStyle;\r\n        context.fill();\r\n    }\r\n\r\n    if ((strokeStyle != null) && (lineWidth > 0)) {\r\n        context.strokeStyle = strokeStyle;\r\n        context.lineWidth = lineWidth;\r\n        context.stroke();\r\n    }\r\n}\r\n\r\nexport default DrawRoundRectangle;", "import DrawRoundRectangle from '../../../utils/canvas/DrawRoundRectangle.js';\r\n\r\nvar DrawRoundRectangleBackground = function (\r\n    canvasObject,\r\n    color,\r\n    strokeColor, strokeLineWidth,\r\n    radius,\r\n    color2, isHorizontalGradient,\r\n    iteration\r\n) {\r\n\r\n    if ((color == null) && (strokeColor == null)) {\r\n        return;\r\n    }\r\n\r\n    var width = canvasObject.canvas.width,\r\n        height = canvasObject.canvas.height;\r\n\r\n    if (strokeColor == null) {\r\n        strokeLineWidth = 0;\r\n    }\r\n    var x = strokeLineWidth / 2;\r\n    width = Math.max(1, width - strokeLineWidth);   // Min width is 1\r\n    height = Math.max(1, height - strokeLineWidth); // Min height is 1\r\n    DrawRoundRectangle(canvasObject.canvas, canvasObject.context,\r\n        x, x,\r\n        width, height,\r\n        radius,\r\n        color,\r\n        strokeColor, strokeLineWidth,\r\n        color2, isHorizontalGradient,\r\n        iteration\r\n    );\r\n}\r\n\r\nexport default DrawRoundRectangleBackground;", "import DrawRoundRectangleBackground from '../../../canvas/utils/DrawRoundRectangleBackground.js';\r\n\r\nexport default {\r\n    draw(startX, startY, textWidth, textHeight) {\r\n        var penManager = this.penManager;\r\n        this.hitAreaManager.clear();\r\n\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        var defaultStyle = this.defaultStyle;\r\n\r\n        this.clear();\r\n        DrawRoundRectangleBackground(\r\n            this,\r\n            defaultStyle.backgroundColor,\r\n            defaultStyle.backgroundStrokeColor,\r\n            defaultStyle.backgroundStrokeLineWidth,\r\n            defaultStyle.backgroundCornerRadius,\r\n            defaultStyle.backgroundColor2,\r\n            defaultStyle.backgroundHorizontalGradient,\r\n            defaultStyle.backgroundCornerIteration\r\n        );\r\n\r\n        // draw lines\r\n        startX += this.startXOffset;\r\n        startY += this.startYOffset;\r\n        var defaultHalign = defaultStyle.halign,\r\n            valign = defaultStyle.valign;\r\n\r\n        var lineWidth, lineHeight = defaultStyle.lineHeight;\r\n        var lines = penManager.lines;\r\n        var totalLinesNum = lines.length,\r\n            maxLines = defaultStyle.maxLines;\r\n        var drawLinesNum, drawLineStartIdx, drawLineEndIdx;\r\n        if ((maxLines > 0) && (totalLinesNum > maxLines)) {\r\n            drawLinesNum = maxLines;\r\n            if (valign === 'center') { // center\r\n                drawLineStartIdx = Math.floor((totalLinesNum - drawLinesNum) / 2);\r\n            } else if (valign === 'bottom') { // bottom\r\n                drawLineStartIdx = totalLinesNum - drawLinesNum;\r\n            } else {\r\n                drawLineStartIdx = 0;\r\n            }\r\n        } else {\r\n            drawLinesNum = totalLinesNum;\r\n            drawLineStartIdx = 0;\r\n        }\r\n        drawLineEndIdx = drawLineStartIdx + drawLinesNum;\r\n\r\n        var offsetX, offsetY;\r\n        var rtl = this.rtl,\r\n            rtlOffset = (rtl) ? this.parent.width : undefined;\r\n        if (valign === 'center') { // center\r\n            offsetY = Math.max((textHeight - (drawLinesNum * lineHeight)) / 2, 0);\r\n        } else if (valign === 'bottom') { // bottom\r\n            offsetY = Math.max(textHeight - (drawLinesNum * lineHeight) - 2, 0);\r\n        } else {\r\n            offsetY = 0;\r\n        }\r\n        offsetY += startY;\r\n        for (var lineIdx = drawLineStartIdx; lineIdx < drawLineEndIdx; lineIdx++) {\r\n            lineWidth = penManager.getLineWidth(lineIdx);\r\n            if (lineWidth === 0) {\r\n                continue;\r\n            }\r\n\r\n            var pens = lines[lineIdx],\r\n                penCount = pens.length;\r\n            var halign = defaultHalign;\r\n            // Seek if there has algin tag\r\n            for (var penIdx = 0; penIdx < penCount; penIdx++) {\r\n                var penAlign = pens[penIdx].prop.align\r\n                if (penAlign !== undefined) {\r\n                    halign = penAlign;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (halign === 'center') { // center\r\n                offsetX = (textWidth - lineWidth) / 2;\r\n            } else if (halign === 'right') { // right\r\n                offsetX = (!rtl) ? (textWidth - lineWidth) : 0;\r\n            } else {\r\n                offsetX = (!rtl) ? 0 : (textWidth - lineWidth);\r\n            }\r\n            offsetX += startX;\r\n\r\n            for (var penIdx = 0; penIdx < penCount; penIdx++) {\r\n                this.drawPen(pens[penIdx], offsetX, offsetY, rtlOffset);\r\n            }\r\n        }\r\n\r\n        context.restore();\r\n    },\r\n\r\n    drawPen(pen, offsetX, offsetY, rtlOffset) {\r\n        offsetX += pen.x;\r\n        offsetY += pen.y + (pen.prop.y || 0);\r\n\r\n        if (rtlOffset !== undefined) {\r\n            offsetX = rtlOffset - offsetX;\r\n        }\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        var curStyle = this.parser.propToContextStyle(this.defaultStyle, pen.prop);\r\n        curStyle.buildFont();\r\n        curStyle.syncFont(canvas, context);\r\n        curStyle.syncStyle(canvas, context);\r\n\r\n        // Underline\r\n        if ((curStyle.underlineThickness > 0) && (pen.width > 0)) {\r\n            var lineOffsetY = offsetY + curStyle.underlineOffset - (curStyle.underlineThickness / 2);\r\n            this.drawLine(offsetX, lineOffsetY, pen.width, curStyle.underlineThickness, curStyle.underlineColor, curStyle);\r\n        }\r\n\r\n        // Text\r\n        if (pen.isTextPen) {\r\n            this.drawText(offsetX, offsetY, pen.text, curStyle);\r\n        }\r\n\r\n        // Image\r\n        if (pen.isImagePen) {\r\n            this.drawImage(offsetX, offsetY, pen.prop.img, pen.prop.color, curStyle);\r\n        }\r\n\r\n        // Strikethrough\r\n        if ((curStyle.strikethroughThickness > 0) && (pen.width > 0)) {\r\n            var lineOffsetY = offsetY + curStyle.strikethroughOffset - (curStyle.strikethroughThickness / 2);\r\n            this.drawLine(offsetX, lineOffsetY, pen.width, curStyle.strikethroughThickness, curStyle.strikethroughColor, curStyle);\r\n        }\r\n\r\n        context.restore();\r\n\r\n        if (pen.hasAreaMarker && (pen.width > 0)) {\r\n            var data;\r\n            var areaKey = pen.prop.area;\r\n            if (areaKey) {\r\n                data = {\r\n                    key: areaKey\r\n                };\r\n            } else {\r\n                var url = pen.prop.url;\r\n                data = {\r\n                    key: `url:${url}`,\r\n                    url: url\r\n                };\r\n            }\r\n\r\n            this.hitAreaManager.add(\r\n                offsetX,                       // x\r\n                (offsetY - this.startYOffset), // y\r\n                pen.width,                     // width\r\n                this.defaultStyle.lineHeight,  // height\r\n                data\r\n            );\r\n        }\r\n    },\r\n\r\n    clear() {\r\n        var canvas = this.canvas;\r\n        this.context.clearRect(0, 0, canvas.width, canvas.height);\r\n    },\r\n\r\n    drawLine(x, y, width, height, color, style) {\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        style.syncShadow(context, style.shadowStroke);\r\n\r\n        var savedLineCap = context.lineCap;\r\n        context.lineCap = 'butt';\r\n        context.strokeStyle = color;\r\n        context.lineWidth = height;\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        context.lineTo((x + width), y);\r\n        context.stroke();\r\n        context.lineCap = savedLineCap;\r\n    },\r\n\r\n    drawText(x, y, text, style) {\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        if (style.stroke && (style.stroke !== 'none') && (style.strokeThickness > 0)) {\r\n            style.syncShadow(context, style.shadowStroke);\r\n            context.strokeText(text, x, y);\r\n        }\r\n\r\n        if (style.color && (style.color !== 'none')) {\r\n            style.syncShadow(context, style.shadowFill);\r\n            context.fillText(text, x, y);\r\n        }\r\n    },\r\n\r\n    drawImage(x, y, imgKey, color, style) {\r\n        y -= this.startYOffset;\r\n        this.parent.imageManager.draw(imgKey, this.context, x, y, color, this.autoRound);\r\n    }\r\n\r\n}", "import CONST from '../../../textbase/const.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\n\r\nclass Pen {\r\n    constructor(config) {\r\n        this.prop = {};\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) { // (txt, x, y, width, prop, newLineMode, startIndex)\r\n        this.text = GetValue(o, 'text', '');\r\n        this.x = GetValue(o, 'x', 0);\r\n        this.y = GetValue(o, 'y', 0);\r\n        this.width = GetValue(o, 'width', 0);\r\n\r\n        var prop = GetValue(o, 'prop', null);\r\n        if (prop === null) {\r\n            prop = {};\r\n        }\r\n        this.prop = prop;\r\n        this.newLineMode = GetValue(o, 'newLineMode', 0);\r\n        this.startIndex = GetValue(o, 'startIndex', 0);\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = this.text\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get wrapText() {\r\n        var txt = this.text;\r\n        if (this.newLineMode !== NO_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var len = this.text.length;\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            len += 1;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    get endIndex() {\r\n        return this.startIndex + this.rawTextLength;\r\n    }\r\n\r\n    get lastX() {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    get isTextPen() {\r\n        return (this.text !== '');\r\n    }\r\n\r\n    get isImagePen() {\r\n        return !!this.prop.img;\r\n    }\r\n\r\n    get hasAreaMarker() {\r\n        return !!this.prop.area || !!this.prop.url;\r\n    }\r\n};\r\n\r\nexport default Pen;", "var Clear = function (obj) {\r\n    if ((typeof (obj) !== 'object') || (obj === null)) {\r\n        return obj;\r\n    }\r\n\r\n    if (Array.isArray(obj)) {\r\n        obj.length = 0;\r\n    } else {\r\n        for (var key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nexport default Clear;", "import Clear from './Clear.js';\r\n\r\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\r\nvar Clone = function (obj, out) {\r\n    var objIsArray = Array.isArray(obj);\r\n\r\n    if (out === undefined) {\r\n        out = (objIsArray) ? [] : {};\r\n    } else {\r\n        Clear(out);\r\n    }\r\n\r\n    if (objIsArray) {\r\n        out.length = obj.length;\r\n        for (var i = 0, cnt = obj.length; i < cnt; i++) {\r\n            out[i] = obj[i];\r\n        }\r\n    } else {\r\n        for (var key in obj) {\r\n            out[key] = obj[key];\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nexport default Clone;\r\n", "var NOOP = function () {\r\n    //  NOOP\r\n};\r\n\r\nexport default NOOP;", "import Pen from './Pen.js';\r\nimport CONST from '../../../textbase/const.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\nimport NOOP from '../../../../utils/object/NOOP.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\n\r\nclass PenManager {\r\n    constructor(config) {\r\n        this.pens = []; // all pens\r\n        this.lines = []; // pens in lines [ [],[],[],.. ]\r\n        this.maxLinesWidth = undefined;\r\n\r\n        this.pensPool = config.pensPool;    // Required\r\n        this.linesPool = config.linesPool;  // Required\r\n        this.tagToText = GetFastValue(config, 'tagToText', NOOP);\r\n        this.tagToTextScope = GetFastValue(config, 'tagToTextScope', undefined);\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n        this.tagToText = undefined;\r\n        this.tagToTextScope = undefined;\r\n    }\r\n\r\n    clear() {\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            this.lines[i].length = 0;\r\n        }\r\n\r\n        this.pensPool.pushMultiple(this.pens);\r\n        this.linesPool.pushMultiple(this.lines);\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    addTextPen(text, x, y, width, prop, newLineMode) {\r\n        var pen = this.pensPool.pop();\r\n        if (pen == null) {\r\n            pen = new Pen();\r\n        }\r\n        PEN_CONFIG.text = text;\r\n        PEN_CONFIG.x = x;\r\n        PEN_CONFIG.y = y;\r\n        PEN_CONFIG.width = width;\r\n        PEN_CONFIG.prop = prop;\r\n        PEN_CONFIG.newLineMode = newLineMode;\r\n        pen.resetFromJSON(PEN_CONFIG);\r\n        this.addPen(pen);\r\n        return this;\r\n    }\r\n\r\n    addImagePen(x, y, width, prop) {\r\n        this.addTextPen('', x, y, width, prop, NO_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addNewLinePen() {\r\n        var previousPen = this.lastPen;\r\n        var x = (previousPen) ? previousPen.lastX : 0;\r\n        var y = (previousPen) ? previousPen.y : 0;\r\n        var prop = (previousPen) ? Clone(previousPen.prop) : null;\r\n        this.addTextPen('', x, y, 0, prop, WRAPPED_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addPen(pen) {\r\n        var previousPen = this.lastPen;\r\n        if (previousPen == null) {\r\n            pen.startIndex = 0;\r\n        } else {\r\n            pen.startIndex = previousPen.endIndex;\r\n        }\r\n        this.pens.push(pen);\r\n\r\n        // maintan lines\r\n        var line = this.lastLine;\r\n        if (line == null) {\r\n            line = this.linesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        line.push(pen);\r\n\r\n        // new line, add an empty line\r\n        if (pen.newLineMode !== NO_NEWLINE) {\r\n            line = this.linesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    clone(targetPenManager) {\r\n        if (targetPenManager == null)\r\n            targetPenManager = new PenManager();\r\n\r\n        targetPenManager.clear();\r\n\r\n        for (var li = 0, llen = this.lines.length; li < llen; li++) {\r\n            var pens = this.lines[li];\r\n            for (var pi = 0, plen = pens.length; pi < plen; pi++) {\r\n                var pen = pens[pi];\r\n                targetPenManager.addPen(\r\n                    pen.text,\r\n                    pen.x,\r\n                    pen.y,\r\n                    pen.width,\r\n                    Clone(pen.prop),\r\n                    pen.newLineMode\r\n                );\r\n            }\r\n        }\r\n\r\n        return targetPenManager;\r\n    }\r\n\r\n    get lastPen() {\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    get lastLine() {\r\n        return this.lines[this.lines.length - 1];\r\n    }\r\n\r\n    getLineStartIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            return this.getLineEndIndex(i);\r\n        } else {\r\n            var line = this.lines[i];\r\n            return (line && line[0]) ? line[0].startIndex : 0;\r\n        }\r\n    }\r\n\r\n    getLineEndIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            i = this.lines.length - 1;\r\n        }\r\n        var li, hasLastPen = false,\r\n            line;\r\n        for (li = i; li >= 0; li--) {\r\n            line = this.lines[li];\r\n            hasLastPen = (line != null) && (line.length > 0);\r\n            if (hasLastPen) {\r\n                break;\r\n            }\r\n        }\r\n        if (!hasLastPen) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        return lastPen.endIndex;\r\n    }\r\n\r\n    getLineWidth(i) {\r\n        var line = this.lines[i];\r\n        if (!line) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        if (lastPen == null) {\r\n            return 0;\r\n        }\r\n\r\n        var lineWidth = lastPen.lastX; // start from 0\r\n        return lineWidth;\r\n    }\r\n\r\n    getMaxLineWidth() {\r\n        if (this.maxLinesWidth !== undefined) {\r\n            return this.maxLinesWidth;\r\n        }\r\n        var w, maxW = 0;\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            w = this.getLineWidth(i);\r\n            if (w > maxW) {\r\n                maxW = w;\r\n            }\r\n        }\r\n        this.maxLinesWidth = maxW;\r\n        return maxW;\r\n    }\r\n\r\n    getLineWidths() {\r\n        var result = [];\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            result.push(this.getLineWidth(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get linesCount() {\r\n        return this.lines.length;\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = \"\",\r\n            pens = this.pens;\r\n        for (var i = 0, len = pens.length; i < len; i++) {\r\n            txt += pens[i].plainText;\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var l = 0,\r\n            pens = this.pens;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            l += pens[i].rawTextLength;\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    getSliceTagText(start, end, wrap) {\r\n        var lastPen = this.lastPen;\r\n        if (lastPen == null) {\r\n            return '';\r\n        }\r\n        var lastPenEnd = lastPen.endIndex;\r\n\r\n        if ((start === undefined) || (start === 0)) {\r\n            // Image pen before first character\r\n            start = -1;\r\n        }\r\n\r\n        if ((end === undefined) || (end === lastPenEnd)) {\r\n            // Image pen after last character\r\n            end = lastPenEnd + 1;\r\n        }\r\n        if (wrap === undefined) {\r\n            wrap = false;\r\n        }\r\n\r\n        var txt = \"\",\r\n            formatTxt,\r\n            pen, penTxt, penStartIdx, penEndIdx, isInRange;\r\n        var currentProp, previousProp;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            pen = this.pens[i];\r\n            penEndIdx = pen.endIndex;\r\n            if (penEndIdx <= start) {\r\n                continue;\r\n            }\r\n            pen = this.pens[i];\r\n            penTxt = (!wrap) ? pen.plainText : pen.wrapText;\r\n            currentProp = pen.prop;\r\n            penStartIdx = pen.startIndex;\r\n\r\n            isInRange = (penStartIdx >= start) && (penEndIdx <= end);\r\n            if (!isInRange) {\r\n                penTxt = penTxt.substring(start - penStartIdx, end - penStartIdx);\r\n            }\r\n\r\n            if (this.tagToTextScope) {\r\n                txt += this.tagToText.call(this.tagToTextScope, penTxt, currentProp, previousProp);\r\n            } else {\r\n                txt += this.tagToText(penTxt, currentProp, previousProp);\r\n            }\r\n\r\n            previousProp = currentProp;\r\n            if (penEndIdx >= end) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get length() {\r\n        return this.lines.length;\r\n    }\r\n\r\n    set length(value) {\r\n        // Only for set length to 0 (clear)\r\n        this.clear();\r\n    }\r\n};\r\n\r\nvar PEN_CONFIG = {};\r\n\r\nexport default PenManager;", "class Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n        this.items = undefined;\r\n    }\r\n\r\n    pop() {\r\n        return (this.items.length > 0) ? this.items.pop() : null;\r\n    }\r\n\r\n    push(l) {\r\n        this.items.push(l);\r\n        return this;\r\n    }\r\n\r\n    pushMultiple(arr) {\r\n        this.items.push.apply(this.items, arr);\r\n        arr.length = 0;\r\n        return this;\r\n    }\r\n\r\n    clear() {\r\n        this.items.length = 0;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Stack;", "import Pool from './utils/struct/Stack.js';\r\nexport default Pool;", "import Pool from '../../../../pool.js';\r\nimport Clear from '../../../../utils/object/Clear.js';\r\n\r\nconst Rectangle = Phaser.Geom.Rectangle;\r\n\r\nvar RectanglePool = new Pool();\r\nclass HitAreaManager {\r\n    constructor() {\r\n        this.hitAreas = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        // Reuse hitArea(rectangle) later\r\n        for (var i = 0, cnt = this.hitAreas.length; i < cnt; i++) {\r\n            Clear(this.hitAreas[i].data);\r\n        }\r\n        RectanglePool.pushMultiple(this.hitAreas);\r\n        return this;\r\n    }\r\n\r\n    add(x, y, width, height, data) {\r\n        var rectangle = RectanglePool.pop();\r\n        if (rectangle === null) {\r\n            rectangle = new Rectangle(x, y, width, height);\r\n        } else {\r\n            rectangle.setTo(x, y, width, height);\r\n        }\r\n\r\n        rectangle.data = data;\r\n\r\n        this.hitAreas.push(rectangle);\r\n        return this;\r\n    }\r\n\r\n    getFirst(x, y) {\r\n        for (var i = 0, cnt = this.hitAreas.length; i < cnt; i++) {\r\n            var hitArea = this.hitAreas[i];\r\n            if (hitArea.contains(x, y)) {\r\n                return hitArea;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getByKey(key) {\r\n        for (var i = 0, cnt = this.hitAreas.length; i < cnt; i++) {\r\n            var hitArea = this.hitAreas[i];\r\n            if (hitArea.data.key === key) {\r\n                return hitArea;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    drawBounds(graphics, color, parent) {\r\n        if (color === undefined) {\r\n            color = 0xffffff;\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .save()\r\n                .scaleCanvas(parent.scaleX, parent.scaleY)\r\n                .rotateCanvas(parent.rotation)\r\n                .translateCanvas(parent.x, parent.y)\r\n        }\r\n\r\n        for (var i = 0, cnt = this.hitAreas.length; i < cnt; i++) {\r\n            var hitArea = this.hitAreas[i];\r\n            graphics\r\n                .lineStyle(1, color)\r\n                .strokeRect(hitArea.x, hitArea.y, hitArea.width, hitArea.height);\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .restore()\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport default HitAreaManager;", "var SetInteractive = function () {\r\n    this.parent\r\n\r\n        .on('pointerdown', OnAreaDown, this)\r\n\r\n        .on('pointerup', OnAreaUp, this)\r\n\r\n        .on('pointermove', OnAreaOverOut, this)\r\n        .on('pointerover', OnAreaOverOut, this)\r\n        .on('pointerout', function (pointer, event) {\r\n            OnAreaOverOut.call(this, pointer, null, null, event);\r\n        }, this)\r\n}\r\n\r\nvar OnAreaDown = function (pointer, localX, localY, event) {\r\n    var area = this.hitAreaManager.getFirst(localX, localY);\r\n    if (area === null) {\r\n        return;\r\n    }\r\n\r\n    var key = area.data.key;\r\n    FireEvent.call(this, 'areadown', key, pointer, localX, localY, event);\r\n\r\n    area.data.isDown = true;\r\n}\r\n\r\nvar OnAreaUp = function (pointer, localX, localY, event) {\r\n    var area = this.hitAreaManager.getFirst(localX, localY);\r\n    if (area === null) {\r\n        return;\r\n    }\r\n\r\n    var areaData = area.data;\r\n\r\n    var key = areaData.key;\r\n    FireEvent.call(this, 'areaup', key, pointer, localX, localY, event);\r\n\r\n    if (areaData.isDown) {\r\n        FireEvent.call(this, 'areaclick', key, pointer, localX, localY, event);\r\n\r\n        var url = areaData.url;\r\n        if (url) {\r\n            window.open(url, '_blank');\r\n        }\r\n    }\r\n\r\n    areaData.isDown = false;\r\n}\r\n\r\nvar OnAreaOverOut = function (pointer, localX, localY, event) {\r\n    if (localX === null) {  // Case of pointerout\r\n        if (this.lastHitAreaKey !== null) {\r\n            FireEvent.call(this, 'areaout', this.lastHitAreaKey, pointer, localX, localY, event);\r\n            this.hitAreaManager.getByKey(this.lastHitAreaKey).isDown = false;\r\n            this.lastHitAreaKey = null;\r\n        }\r\n        return;\r\n    }\r\n\r\n    var area = this.hitAreaManager.getFirst(localX, localY);\r\n    var key = (area) ? area.data.key : null;\r\n    if (this.lastHitAreaKey === key) {\r\n        return;\r\n    }\r\n\r\n    if (this.lastHitAreaKey !== null) {\r\n        FireEvent.call(this, 'areaout', this.lastHitAreaKey, pointer, localX, localY, event);\r\n\r\n        var prevHitArea = this.hitAreaManager.getByKey(this.lastHitAreaKey);\r\n        if (this.urlTagCursorStyle && !!prevHitArea.data.url) {\r\n            this.scene.input.manager.canvas.style.cursor = '';\r\n        }\r\n\r\n        prevHitArea.isDown = false;\r\n    }\r\n    if (key !== null) {\r\n        FireEvent.call(this, 'areaover', key, pointer, localX, localY, event);\r\n\r\n        if (this.urlTagCursorStyle && !!area.data.url) {\r\n            this.scene.input.manager.canvas.style.cursor = this.urlTagCursorStyle;\r\n        }\r\n    }\r\n\r\n    this.lastHitAreaKey = key;\r\n}\r\n\r\nvar FireEvent = function (eventName, key, pointer, localX, localY, event) {\r\n    this.parent.emit(`${eventName}-${key}`, pointer, localX, localY, event);\r\n    this.parent.emit(eventName, key, pointer, localX, localY, event);\r\n}\r\nexport default SetInteractive;", "var RE_ASCII = /^[\\x00-\\x7F]+$/;\r\nvar IsASCIIString = function (s) {\r\n    return RE_ASCII.test(s);\r\n}\r\n\r\nexport default IsASCIIString;", "import CONST from '../../../textbase/const.js';\r\nimport IsASCIIString from '../../../../utils/string/IsASCIIString.js';\r\n\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst WORD_WRAP = CONST.WORD_WRAP;\r\nconst CHAR_WRAP = CONST.CHAR_WRAP;\r\nconst MIX_WRAP = CONST.MIX_WRAP;\r\nconst splitRegExp = CONST.SPLITREGEXP;\r\n\r\nvar WrapText = function (text, getTextWidth, wrapMode, wrapWidth, offset, wrapTextLinesPool) {\r\n    if (wrapWidth <= 0) {\r\n        wrapMode = NO_WRAP;\r\n    }\r\n\r\n    var retLines = [];\r\n    if (!text || !text.length) {\r\n        return retLines;\r\n    }\r\n\r\n    var isNoWrap = (wrapMode === NO_WRAP);\r\n\r\n    var lines = text.split(splitRegExp),\r\n        line, remainWidth, newLineMode;\r\n    for (var i = 0, linesLen = lines.length; i < linesLen; i++) {\r\n        line = lines[i];\r\n        newLineMode = (i === (linesLen - 1)) ? NO_NEWLINE : RAW_NEWLINE;\r\n\r\n        if (isNoWrap) {\r\n            var textWidth = getTextWidth(line);\r\n            retLines.push(wrapTextLinesPool.getLine(line, textWidth, newLineMode));\r\n            continue;\r\n        }\r\n\r\n        remainWidth = (i === 0) ? (wrapWidth - offset) : wrapWidth;\r\n\r\n        // Short string testing\r\n        if (line.length <= 100) {\r\n            var textWidth = getTextWidth(line);\r\n            if (textWidth <= remainWidth) {\r\n                retLines.push(wrapTextLinesPool.getLine(line, textWidth, newLineMode));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        var tokenArray = ParseLine(line, wrapMode);\r\n\r\n\r\n        var token, tokenWidth, isLastToken;\r\n        var lineText = '', lineWidth = 0;\r\n        var currLineWidth;\r\n        for (var j = 0, tokenLen = tokenArray.length; j < tokenLen; j++) {\r\n            token = tokenArray[j];\r\n            tokenWidth = getTextWidth(token);\r\n\r\n            // Text width of single token is larger than a line width\r\n            if ((tokenWidth > wrapWidth) && IsWord(token)) {\r\n                if (lineText !== '') {\r\n                    // Has pending lineText, flush it out\r\n                    retLines.push(wrapTextLinesPool.getLine(lineText, lineWidth, WRAPPED_NEWLINE));\r\n\r\n                } else if ((j === 0) && (offset > 0)) {\r\n                    // No pending lineText, but has previous text. Append a newline\r\n                    retLines.push(wrapTextLinesPool.getLine('', 0, WRAPPED_NEWLINE));\r\n\r\n                }\r\n\r\n                // Word break\r\n                retLines.push(...WrapText(token, getTextWidth, CHAR_WRAP, wrapWidth, 0, wrapTextLinesPool));\r\n                // Continue at last-wordBreak-line\r\n                var lastwordBreakLine = retLines.pop();\r\n                lineText = lastwordBreakLine.text;\r\n                lineWidth = lastwordBreakLine.width;\r\n                // Free this line\r\n                wrapTextLinesPool.freeLine(lastwordBreakLine);\r\n\r\n                // Special case : Start at a space character, discard it\r\n                if (lineText === ' ') {\r\n                    lineText = '';\r\n                    lineWidth = 0;\r\n                }\r\n                continue;\r\n            }\r\n\r\n            currLineWidth = lineWidth + tokenWidth;\r\n            if (currLineWidth > remainWidth) {\r\n                // New line\r\n                retLines.push(wrapTextLinesPool.getLine(lineText, lineWidth, WRAPPED_NEWLINE));\r\n                lineText = token;\r\n                lineWidth = tokenWidth;\r\n                remainWidth = wrapWidth;\r\n\r\n            } else {\r\n                // Append token, continue\r\n                lineText += token;\r\n                lineWidth = currLineWidth;\r\n            }\r\n\r\n            if (j === (tokenLen - 1)) {\r\n                // Flush remain text\r\n                retLines.push(wrapTextLinesPool.getLine(lineText, lineWidth, newLineMode));\r\n            }\r\n        } // for token in tokenArray\r\n\r\n    } // for each line in lines\r\n\r\n    return retLines;\r\n};\r\n\r\nvar ParseLine = function (s, mode) {\r\n    var tokens;\r\n\r\n    switch (mode) {\r\n        case WORD_WRAP:\r\n            tokens = []\r\n            s = s.split(' ');\r\n            for (var i = 0, icnt = s.length; i < icnt; i++) {\r\n                var token = s[i];\r\n                if (i < (icnt - 1)) {\r\n                    tokens.push(token + ' ');\r\n                } else { // The last token\r\n                    if (token !== '') {\r\n                        tokens.push(token);\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n\r\n        case CHAR_WRAP:\r\n            tokens = s.split('');\r\n            break;\r\n\r\n        default: // MIX_WRAP\r\n            tokens = []\r\n            s = s.split(' ');\r\n            for (var i = 0, icnt = s.length; i < icnt; i++) {\r\n                var token = s[i];\r\n                if (i < (icnt - 1)) {\r\n                    if (IsASCIIString(token)) {\r\n                        tokens.push(token + ' ');\r\n                    } else {\r\n                        tokens.push(...token.split(''));\r\n                        // Add space as last token\r\n                        tokens.push(' ')\r\n                    }\r\n                } else { // The last token\r\n                    if (token !== '') {\r\n                        if (IsASCIIString(token)) {\r\n                            tokens.push(token);\r\n                        } else {\r\n                            tokens.push(...token.split(''));\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            break;\r\n    }\r\n\r\n    return tokens;\r\n}\r\n\r\nvar IsWord = function (s) {\r\n    switch (s.length) {\r\n        case 1: return false;\r\n        case 2: return (s.charAt(1) !== ' ');\r\n        default: return true;\r\n    }\r\n}\r\n\r\nexport default WrapText;", "import DrawMethods from './DrawMethods.js';\r\nimport PenManager from '../penmanger/PenManager.js';\r\nimport HitAreaManager from '../hitareamanager/HitAreaManager.js';\r\nimport SetInteractive from './SetInteractive.js';\r\nimport CONST from '../../../textbase/const.js';\r\nimport WrapText from '../wraptext/WrapText.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\n\r\nclass CanvasText {\r\n    constructor(config) {\r\n        this.parent = config.parent;\r\n        this.scene = this.parent.scene;\r\n        this.context = GetValue(config, 'context', null);\r\n        this.canvas = this.context.canvas;\r\n        this.parser = GetValue(config, 'parser', null);\r\n        this.defaultStyle = GetValue(config, 'style', null);\r\n        this.autoRound = true;\r\n\r\n        this.pensPool = config.pensPool;                     // Required\r\n        this.linesPool = config.linesPool;                   // Required\r\n        this.wrapTextLinesPool = config.wrapTextLinesPool;   // Required\r\n\r\n        this.penManager = this.newPenManager();\r\n        this._tmpPenManager = null;\r\n\r\n        this.hitAreaManager = new HitAreaManager();\r\n        this.lastHitAreaKey = null;\r\n        this.urlTagCursorStyle = null;\r\n\r\n        var context = this.context;\r\n        this.getTextWidth = function (text) {\r\n            return context.measureText(text).width;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.parent = undefined;\r\n        this.scene = undefined;\r\n        this.context = undefined;\r\n        this.canvas = undefined;\r\n        this.parser = undefined;\r\n        this.defaultStyle = undefined;\r\n\r\n        if (this.penManager) {\r\n            this.penManager.destroy();\r\n            this.penManager = undefined;\r\n        }\r\n        if (this._tmpPenManager) {\r\n            this._tmpPenManager.destroy();\r\n            this._tmpPenManager = undefined;\r\n        }\r\n        if (this.hitAreaManager) {\r\n            this.hitAreaManager.destroy();\r\n            this.hitAreaManager = undefined;\r\n        }\r\n\r\n        this.pensPool = undefined;\r\n        this.linesPool = undefined;\r\n        this.wrapTextLinesPool = undefined;\r\n    }\r\n\r\n    updatePenManager(text, wrapMode, wrapWidth, lineHeight, penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n        penManager.clear();\r\n        if (text === \"\") {\r\n            return penManager;\r\n        }\r\n\r\n        var textStyle = this.parent.style;\r\n        if (textStyle.isWrapFitMode) {\r\n            var padding = this.parent.padding;\r\n            wrapWidth = textStyle.fixedWidth - padding.left - padding.right;\r\n        }\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n\r\n        var MeasureText = function (text) {\r\n            return context.measureText(text).width;\r\n        }\r\n\r\n        var cursorX = 0,\r\n            cursorY = 0;\r\n\r\n        var customTextWrapCallback = textStyle.wrapCallback,\r\n            customTextWrapCallbackScope = textStyle.wrapCallbackScope;\r\n        var reuseLines = true;\r\n\r\n        var plainText, curProp, curStyle;\r\n        var match = this.parser.splitText(text),\r\n            result, wrapLines,\r\n            wrapTextLinesPool = this.wrapTextLinesPool;\r\n        for (var i = 0, len = match.length; i < len; i++) {\r\n            result = this.parser.tagTextToProp(match[i], curProp);\r\n            plainText = result.plainText;\r\n            curProp = result.prop;\r\n\r\n            if (curProp.img) { // Image tag                \r\n                var imgWidth = this.imageManager.getOuterWidth(curProp.img);\r\n                if ((wrapWidth > 0) && (wrapMode !== NO_WRAP)) {  // Wrap mode\r\n                    if (wrapWidth < (cursorX + imgWidth)) {\r\n                        penManager.addNewLinePen();\r\n                        cursorY += lineHeight;\r\n                        cursorX = 0;\r\n                    }\r\n                }\r\n                penManager.addImagePen(cursorX, cursorY, imgWidth, Clone(curProp));\r\n                cursorX += imgWidth;\r\n\r\n            } else if (plainText !== '') {\r\n                // wrap text to lines\r\n                // Save the current context.\r\n                context.save();\r\n                curStyle = this.parser.propToContextStyle(this.defaultStyle, curProp);\r\n                curStyle.buildFont();\r\n                curStyle.syncFont(canvas, context);\r\n                curStyle.syncStyle(canvas, context);\r\n\r\n                if (!customTextWrapCallback) {\r\n                    wrapLines = WrapText(\r\n                        plainText,\r\n                        MeasureText,\r\n                        wrapMode, wrapWidth,\r\n                        cursorX,\r\n                        wrapTextLinesPool\r\n                    );\r\n                } else { // customTextWrapCallback\r\n                    wrapLines = customTextWrapCallback.call(customTextWrapCallbackScope,\r\n                        plainText,\r\n                        MeasureText,\r\n                        wrapWidth,\r\n                        cursorX\r\n                    );\r\n                    if (typeof (wrapLines) === 'string') {\r\n                        wrapLines = wrapLines.split('\\n');\r\n                    }\r\n                    var n;\r\n                    for (var j = 0, jLen = wrapLines.length; j < jLen; j++) {\r\n                        n = wrapLines[j];\r\n                        if (typeof (n) === 'string') {\r\n                            wrapLines[j] = wrapTextLinesPool.getLine(\r\n                                n,\r\n                                MeasureText(n),\r\n                                (j < (jLen - 1)) ? 2 : 0\r\n                            );\r\n                        } else {\r\n                            reuseLines = false;\r\n                        }\r\n                    }\r\n                }  // customTextWrapCallback\r\n\r\n                // add pens\r\n                var n;\r\n                for (var j = 0, jLen = wrapLines.length; j < jLen; j++) {\r\n                    n = wrapLines[j];\r\n                    penManager.addTextPen(n.text, cursorX, cursorY, n.width, Clone(curProp), n.newLineMode);\r\n\r\n                    if (n.newLineMode !== NO_NEWLINE) {\r\n                        cursorX = 0;\r\n                        cursorY += lineHeight;\r\n                    } else {\r\n                        cursorX += n.width;\r\n                    }\r\n\r\n                }\r\n\r\n                if (reuseLines) {\r\n                    wrapTextLinesPool.freeLines(wrapLines);\r\n                }\r\n                wrapLines = null;\r\n\r\n                context.restore();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Add strokeThinkness to last pen of each line\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            var line = this.lines[i];\r\n            var lastPen = line[line.length - 1];\r\n            if (lastPen) {\r\n                lastPen.width += this.parser.getStrokeThinkness(this.defaultStyle, lastPen.prop);\r\n            }\r\n        }\r\n\r\n        return penManager;\r\n    }\r\n\r\n    get startXOffset() {\r\n        var defaultStyle = this.defaultStyle;\r\n        return (defaultStyle.strokeThickness / 2) + defaultStyle.xOffset;\r\n    }\r\n\r\n    get startYOffset() {\r\n        var defaultStyle = this.defaultStyle;\r\n        return (defaultStyle.strokeThickness / 2) + defaultStyle.metrics.ascent;\r\n    }\r\n\r\n    get lines() {\r\n        return this.penManager.lines;\r\n    }\r\n\r\n    get desplayLinesCount() {\r\n        var linesCount = this.penManager.linesCount,\r\n            maxLines = this.defaultStyle.maxLines;\r\n        if ((maxLines > 0) && (linesCount > maxLines)) {\r\n            linesCount = maxLines;\r\n        }\r\n        return linesCount;\r\n    }\r\n\r\n    get linesWidth() {\r\n        return Math.ceil(this.penManager.getMaxLineWidth());\r\n    }\r\n\r\n    get linesHeight() {\r\n        var linesCount = this.desplayLinesCount;\r\n        var linesHeight = (this.defaultStyle.lineHeight * linesCount);\r\n        if (linesCount > 0) {\r\n            linesHeight -= this.defaultStyle.lineSpacing;\r\n        }\r\n        return linesHeight;\r\n    }\r\n\r\n    get imageManager() {\r\n        return this.parent.imageManager;\r\n    }\r\n\r\n    get rtl() {\r\n        return this.parent.style.rtl;\r\n    }\r\n\r\n    newPenManager() {\r\n        return new PenManager({\r\n            pensPool: this.pensPool,\r\n            linesPool: this.linesPool,\r\n            tagToText: this.parser.propToTagText,\r\n            tagToTextScope: this.parser\r\n        });\r\n    }\r\n\r\n    get tmpPenManager() {\r\n        if (this._tmpPenManager === null) {\r\n            this._tmpPenManager = this.newPenManager();\r\n        }\r\n        return this._tmpPenManager;\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        var plainText;\r\n        if (text == null) {\r\n            plainText = this.penManager.plainText;\r\n        } else {\r\n            var m, match = this.parser.splitText(text, 1); // PLAINTEXTONLY_MODE\r\n            plainText = \"\";\r\n            for (var i = 0, len = match.length; i < len; i++) {\r\n                plainText += match[i];\r\n            }\r\n        }\r\n\r\n        if ((start != null) || (end != null)) {\r\n            if (start == null) {\r\n                start = 0;\r\n            }\r\n            if (end == null) {\r\n                end = plainText.length;\r\n            }\r\n            plainText = plainText.substring(start, end);\r\n        }\r\n\r\n        return plainText;\r\n    }\r\n\r\n    getPenManager(text, retPenManager) {\r\n        if (text === undefined) {\r\n            return this.copyPenManager(retPenManager, this.penManager);\r\n        }\r\n\r\n        if (retPenManager === undefined) {\r\n            retPenManager = this.newPenManager();\r\n        }\r\n\r\n        var defaultStyle = this.defaultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defaultStyle.wrapMode,\r\n            defaultStyle.wrapWidth,\r\n            defaultStyle.lineHeight,\r\n            retPenManager\r\n        );\r\n        return retPenManager;\r\n    }\r\n\r\n    getText(text, start, end, wrap) {\r\n        if (text == null) {\r\n            return this.penManager.getSliceTagText(start, end, wrap);\r\n        }\r\n\r\n        var penManager = this.tmpPenManager;\r\n        var defaultStyle = this.defaultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defaultStyle.wrapMode,\r\n            defaultStyle.wrapWidth,\r\n            defaultStyle.lineHeight,\r\n            penManager\r\n        );\r\n\r\n        return penManager.getSliceTagText(start, end, wrap);\r\n    }\r\n\r\n    copyPenManager(ret, src) {\r\n        if (src === undefined) {\r\n            src = this.penManager;\r\n        }\r\n        return src.copy(ret);\r\n    }\r\n\r\n    getTextWidth(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.getMaxLineWidth();\r\n    }\r\n\r\n    getLastPen(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.lastPen;\r\n    }\r\n};\r\n\r\nvar methods = {\r\n    setInteractive: SetInteractive,\r\n}\r\n\r\nObject.assign(\r\n    CanvasText.prototype,\r\n    DrawMethods,\r\n    methods\r\n);\r\n\r\nexport default CanvasText;", "import Pool from '../../../../pool.js';\r\n\r\nclass WrapTextLinesPool extends Pool {\r\n    freeLine(line) {\r\n        if (!line) {\r\n            return;\r\n        }\r\n        this.push(line);\r\n        return this;\r\n    }\r\n\r\n    freeLines(lines) {\r\n        if (!lines) {\r\n            return;\r\n        }\r\n        this.pushMultiple(lines);\r\n        return this;\r\n    }\r\n\r\n    getLine(text, width, newLineMode) {\r\n        var l = this.pop();\r\n        if (l === null) {\r\n            l = {};\r\n        }\r\n        l.text = text;\r\n        l.width = width;\r\n        l.newLineMode = newLineMode;\r\n        return l;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default WrapTextLinesPool;", "const IsPlainObject = Phaser.Utils.Objects.IsPlainObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nvar AddImage = function (key, config) {\r\n    if (IsPlainObject(key)) {\r\n        config = key;\r\n        key = config.key;\r\n    } else if (config === undefined) {\r\n        config = {\r\n            key: key\r\n        }\r\n    }\r\n\r\n    if (!config.hasOwnProperty('key')) {\r\n        config.key = key;\r\n    }\r\n\r\n    var textureKey = config.key, frameKey = config.frame;\r\n    var width = config.width, height = config.height;\r\n\r\n    if ((width === undefined) || (height === undefined)) {\r\n        var frame = this.textureManager.getFrame(textureKey, frameKey);\r\n        var frameWidth = (frame) ? frame.cutWidth : 0;\r\n        var frameHeight = (frame) ? frame.cutHeight : 0;\r\n        if ((width === undefined) && (height === undefined)) {\r\n            width = frameWidth;\r\n            height = frameHeight;\r\n        } else if (width === undefined) {\r\n            width = frameWidth * (height / frameHeight);\r\n        } else if (height === undefined) {\r\n            height = frameHeight * (width / frameWidth);\r\n        }\r\n    }\r\n\r\n    this.images[key] = {\r\n        key: textureKey,\r\n        frame: frameKey,\r\n        width: width,\r\n        height: height,\r\n        y: GetValue(config, 'y', 0),\r\n        left: GetValue(config, 'left', 0),\r\n        right: GetValue(config, 'right', 0),\r\n        originX: GetValue(config, 'originX', 0),\r\n        originY: GetValue(config, 'originY', 0),\r\n        tintFill: GetValue(config, 'tintFill', false),\r\n    }\r\n}\r\n\r\nexport default AddImage;", "const CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\nvar DrawFrameToCanvas = function (frame, canvas, x, y, width, height, color, autoRound) {\r\n    if (x === undefined) { x = 0; }\r\n    if (y === undefined) { y = 0; }\r\n    if (width === undefined) { width = frame.cutWidth; }\r\n    if (height === undefined) { height = frame.cutHeight; }\r\n    if (autoRound === undefined) { autoRound = false };\r\n\r\n    if (autoRound) {\r\n        x = Math.round(x);\r\n        y = Math.round(y);\r\n    }\r\n\r\n    var context = canvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (color) {\r\n        // Draw image at tempCanvas\r\n\r\n        // Get tempCanvas\r\n        var tempCanvas = CanvasPool.create(null, width, height, Phaser.CANVAS, true);\r\n\r\n        var tempContext = tempCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n        tempContext.drawImage(\r\n            frame.source.image,\r\n            frame.cutX, frame.cutY, frame.cutWidth, frame.cutHeight,\r\n            0, 0, width, height\r\n        );\r\n\r\n        // Tint-fill\r\n        tempContext.globalCompositeOperation = 'source-in';\r\n        tempContext.fillStyle = color;\r\n        tempContext.fillRect(0, 0, width, height);\r\n\r\n        // Draw tempCanvas at context\r\n        context.drawImage(\r\n            tempCanvas,\r\n            0, 0, width, height,\r\n            x, y, width, height\r\n        );\r\n\r\n        // Release tempCanvas\r\n        CanvasPool.remove(tempCanvas);\r\n    } else {\r\n        context.drawImage(\r\n            frame.source.image,\r\n            frame.cutX, frame.cutY, frame.cutWidth, frame.cutHeight,\r\n            x, y, width, height\r\n        );\r\n    }\r\n}\r\n\r\nexport default DrawFrameToCanvas;", "import DrawFrameToCanvas from '../DrawFrameToCanvas.js';\r\n\r\nvar DrawImage = function (key, context, x, y, color, autoRound) {\r\n    var imgData = this.get(key);\r\n    if (!imgData) {\r\n        // Invalid key\r\n        return;\r\n    }\r\n\r\n    var frame = this.textureManager.getFrame(imgData.key, imgData.frame);\r\n\r\n    var width = imgData.width,\r\n        height = imgData.height;\r\n    x += imgData.left - (imgData.originX * width);\r\n    y += imgData.y - (imgData.originY * height);\r\n\r\n    if (!imgData.tintFill) {\r\n        color = undefined;\r\n    }\r\n\r\n    DrawFrameToCanvas(\r\n        frame, context.canvas,\r\n        x, y, width, height,\r\n        color, autoRound\r\n    );\r\n}\r\n\r\nexport default DrawImage;", "import AddImage from './AddImage.js';\r\nimport DrawImage from './DrawImage.js';\r\n\r\nclass ImageManager {\r\n    constructor(scene) {\r\n        this.textureManager = scene.sys.textures;\r\n        this.images = {};\r\n    }\r\n\r\n    destroy() {\r\n        this.textureManager = undefined;\r\n        this.images = undefined;\r\n    }\r\n\r\n    add(key, config) {\r\n        if (typeof (key) === 'string') {\r\n            AddImage.call(this, key, config);\r\n        } else if (Array.isArray(key)) {\r\n            var data = key;\r\n            for (var i = 0, cnt = data.length; i < cnt; i++) {\r\n                AddImage.call(this, data[i]);\r\n            }\r\n        } else {\r\n            var data = key;\r\n            for (var key in data) {\r\n                AddImage.call(this, key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    has(key) {\r\n        return this.images.hasOwnProperty(key);\r\n    }\r\n\r\n    remove(key) {\r\n        if (this.has(key)) {\r\n            delete this.images[key];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get(key) {\r\n        if (!this.has(key)) {\r\n            if (this.textureManager.exists(key)) {\r\n                this.add(key);\r\n            }\r\n        }\r\n        return this.images[key];\r\n    }\r\n\r\n    getOuterWidth(key) {\r\n        var data = this.get(key);\r\n        return (data) ? (data.width + data.left + data.right) : 0;\r\n    }\r\n\r\n    getFrame(key) {\r\n        var data = this.get(key);\r\n        return (data) ? this.textureManager.getFrame(data.key, data.frame) : undefined;\r\n    }\r\n\r\n    hasTexture(key) {\r\n        return !!this.getFrame(key);\r\n    }\r\n}\r\n\r\nvar methods = {\r\n    draw: DrawImage\r\n}\r\n\r\nObject.assign(\r\n    ImageManager.prototype,\r\n    methods\r\n);\r\n\r\n\r\nexport default ImageManager;", "var CopyCanvasToTexture = function (scene, srcCanvas, key, x, y, width, height) {\r\n    var textures = scene.sys.textures;\r\n    var renderer = scene.renderer;\r\n\r\n    if (x === undefined) {\r\n        x = 0;\r\n    }\r\n    if (y === undefined) {\r\n        y = 0;\r\n    }\r\n    if (width === undefined) {\r\n        width = srcCanvas.width;\r\n    }\r\n    if (height === undefined) {\r\n        height = srcCanvas.height;\r\n    }\r\n\r\n    var texture;\r\n    if (textures.exists(key)) {\r\n        texture = textures.get(key);\r\n    } else {\r\n        texture = textures.createCanvas(key, width, height);\r\n    }\r\n\r\n    var destCanvas = texture.getSourceImage();\r\n    if (destCanvas.width !== width) {\r\n        destCanvas.width = width;\r\n    }\r\n    if (destCanvas.height !== height) {\r\n        destCanvas.height = height;\r\n    }\r\n\r\n    var destCtx = destCanvas.getContext('2d', { willReadFrequently: true });\r\n    destCtx.clearRect(0, 0, width, height);\r\n    destCtx.drawImage(srcCanvas, x, y, width, height);\r\n    if (renderer.gl && texture) {\r\n        renderer.canvasToTexture(destCanvas, texture.source[0].glTexture, true, 0);\r\n    }\r\n}\r\n\r\nexport default CopyCanvasToTexture;", "var AppendText = function (value, addCR) {\r\n    if (!value && value !== 0) {\r\n        value = '';\r\n    }\r\n\r\n    if (addCR === undefined) {\r\n        addCR = true;\r\n    }\r\n\r\n    if (Array.isArray(value)) {\r\n        value = value.join('\\n');\r\n    }\r\n\r\n    var newText;\r\n    if (addCR) {\r\n        newText = `${this.text}\\n${value}`;\r\n    } else {\r\n        newText = `${this.text}${value}`;\r\n    }\r\n\r\n    if (newText != this.text) {\r\n        this.setText(newText);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nexport default AppendText;", "import TextBase from '../../textbase/TextBase.js';\r\nimport TextStyle from '../../textbase/textstyle/TextStyle.js';\r\nimport CanvasText from './canvastext/CanvasText.js';\r\nimport Pool from '../../../pool.js';\r\nimport WrapTextLinesPoolClass from './wraptext/WrapTextLinesPool.js';\r\nimport CONST from '../../textbase/const.js';\r\nimport ImageManager from '../../../utils/texture/imagemanager/ImageManager.js';\r\nimport CopyCanvasToTexture from '../../../utils/texture/CopyCanvasToTexture.js';\r\nimport AppendText from '../../../utils/text/AppendText.js';\r\n\r\nconst IsPlainObject = Phaser.Utils.Objects.IsPlainObject;\r\nconst AddToDOM = Phaser.DOM.AddToDOM;\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\nconst GameObject = Phaser.GameObjects.GameObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst RemoveFromDOM = Phaser.DOM.RemoveFromDOM;\r\nconst SPLITREGEXP = CONST.SPLITREGEXP;\r\nconst UUID = Phaser.Utils.String.UUID;\r\n\r\n// Reuse objects can increase performance\r\nvar SharedPensPools = null;\r\nvar SharedLinesPool = null;\r\nvar SharedWrapTextLinesPool = null;\r\n\r\nclass Text extends TextBase {\r\n    constructor(scene, x, y, text, style, type, parser) {\r\n        if (IsPlainObject(x)) {\r\n            var config = x;\r\n            x = GetValue(config, 'x', 0);\r\n            y = GetValue(config, 'y', 0);\r\n            text = GetValue(config, 'text', '');\r\n            style = GetValue(config, 'style');\r\n        }\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n\r\n        super(scene, type);\r\n\r\n        this.renderer = scene.sys.game.renderer;\r\n\r\n        this.setPosition(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.initPipeline();\r\n        this.initPostPipeline(true);\r\n\r\n        this.canvas = CanvasPool.create(this);\r\n\r\n        this.context = this.canvas.getContext('2d', { willReadFrequently: true });\r\n\r\n        this._imageManager = undefined;\r\n\r\n        if (style) {\r\n            // Override align\r\n            if (style.hasOwnProperty('align')) {\r\n                var halign = style.align;\r\n                delete style.align;\r\n                style.halign = halign;\r\n            }\r\n            // Has Stroke color but stroke thinkness, set stroke thinkness to 1\r\n            if (style.hasOwnProperty('stroke') && !style.hasOwnProperty('strokeThickness')) {\r\n                style.strokeThickness = 1;\r\n            }\r\n        }\r\n        this.style = new TextStyle(this, style);\r\n\r\n        var imageData = GetValue(style, 'images', undefined);\r\n        if (imageData) {\r\n            this.addImage(imageData);\r\n        }\r\n\r\n        this.autoRound = true;\r\n\r\n        this._text = undefined;\r\n\r\n        this.padding = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n\r\n        this.width = 1;\r\n\r\n        this.height = 1;\r\n\r\n        this.lineSpacing = 0;\r\n\r\n        this.dirty = false;\r\n\r\n        //  If resolution wasn't set, force it to 1\r\n        if (this.style.resolution === 0) {\r\n            this.style.resolution = 1;\r\n        }\r\n\r\n        this._crop = this.resetCropObject();\r\n\r\n        //  Create a Texture for this Text object\r\n        this._textureKey = UUID();\r\n\r\n        this.texture = scene.sys.textures.addCanvas(this._textureKey, this.canvas);\r\n\r\n        //  Get the frame\r\n        this.frame = this.texture.get();\r\n\r\n        //  Set the resolution\r\n        this.frame.source.resolution = this.style.resolution;\r\n\r\n        if (this.renderer && this.renderer.gl) {\r\n            //  Clear the default 1x1 glTexture, as we override it later\r\n            this.renderer.deleteTexture(this.frame.source.glTexture);\r\n            this.frame.source.glTexture = null;\r\n        }\r\n\r\n        var sharedPoolMode = GetValue(style, 'sharedPool', true);\r\n\r\n        var pensPool, linesPool, wrapTextLinesPool;\r\n        if (sharedPoolMode) {\r\n            // Use pools first time\r\n            if (!SharedPensPools) {\r\n                SharedPensPools = {};\r\n                SharedLinesPool = new Pool();\r\n                SharedWrapTextLinesPool = new WrapTextLinesPoolClass();\r\n\r\n                // Remove cached data\r\n                this.scene.game.events.once('destroy', function () {\r\n                    SharedPensPools = null;\r\n                    SharedLinesPool = null;\r\n                    SharedWrapTextLinesPool = null;\r\n                });\r\n            }\r\n            if (!SharedPensPools.hasOwnProperty(type)) {\r\n                SharedPensPools[type] = new Pool();\r\n            }\r\n\r\n            pensPool = SharedPensPools[type];\r\n            linesPool = SharedLinesPool;\r\n            wrapTextLinesPool = SharedWrapTextLinesPool;\r\n        } else {\r\n            pensPool = new Pool();\r\n            linesPool = new Pool();\r\n            wrapTextLinesPool = new WrapTextLinesPoolClass();\r\n        }\r\n\r\n        this.canvasText = new CanvasText({\r\n            parent: this,\r\n            context: this.context,\r\n            parser: parser,\r\n            style: this.style,\r\n            pensPool: pensPool,\r\n            linesPool: linesPool,\r\n            wrapTextLinesPool: wrapTextLinesPool,\r\n        });\r\n        this.parser = parser;\r\n\r\n        this.initRTL();\r\n\r\n        if (style && style.padding) {\r\n            this.setPadding(style.padding);\r\n        }\r\n\r\n        if (style && style.lineSpacing) {\r\n            this.setLineSpacing(style.lineSpacing);\r\n        }\r\n\r\n        this.setText(text);\r\n\r\n        this.setUrlTagCursorStyle(GetValue(style, 'urlTagCursorStyle', 'pointer'));\r\n\r\n        if (GetValue(style, 'interactive', false)) {\r\n            this.setInteractive();\r\n        }\r\n    }\r\n\r\n    preDestroy() {\r\n        RemoveFromDOM(this.canvas);\r\n        // Do nothing if canvas did not add to parent node before\r\n\r\n        this.canvasText.destroy();\r\n        this.canvasText = undefined;\r\n\r\n        if (this._imageManager) {\r\n            this._imageManager.destroy();\r\n            this._imageManager = undefined;\r\n        }\r\n\r\n        CanvasPool.remove(this.canvas);\r\n\r\n        var texture = this.texture;\r\n\r\n        if (texture) {\r\n            texture.destroy();\r\n        }\r\n    }\r\n\r\n    set text(value) {\r\n        this.setText(value);\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    initRTL() {\r\n        if (!this.style.rtl) {\r\n            return;\r\n        }\r\n\r\n        //  Here is where the crazy starts.\r\n        //\r\n        //  Due to browser implementation issues, you cannot fillText BiDi text to a canvas\r\n        //  that is not part of the DOM. It just completely ignores the direction property.\r\n\r\n        this.canvas.dir = 'rtl';\r\n\r\n        //  Experimental atm, but one day ...\r\n        this.context.direction = 'rtl';\r\n\r\n        //  Add it to the DOM, but hidden within the parent canvas.\r\n        this.canvas.style.display = 'none';\r\n\r\n        AddToDOM(this.canvas, this.scene.sys.canvas);\r\n\r\n        //  And finally we set the x origin\r\n        this.originX = 1;\r\n    }\r\n\r\n    setRTL(rtl) {\r\n        if (rtl === undefined) {\r\n            rtl = true;\r\n        }\r\n\r\n        var style = this.style;\r\n        if (style.rtl === rtl) {\r\n            return this;\r\n        }\r\n\r\n        style.rtl = rtl;\r\n\r\n        if (rtl) {\r\n            this.canvas.dir = 'rtl';\r\n            this.context.direction = 'rtl';\r\n            this.canvas.style.display = 'none';\r\n            AddToDOM(this.canvas, this.scene.sys.canvas);\r\n        } else {\r\n            this.canvas.dir = 'ltr';\r\n            this.context.direction = 'ltr';\r\n        }\r\n\r\n        if (style.halign === 'left') {\r\n            style.halign = 'right';\r\n        } else if (style.halign === 'right') {\r\n            style.halign = 'left';\r\n        }\r\n\r\n        if (this._imageManager) {\r\n            var images = this._imageManager.images;\r\n            for (var key in images) {\r\n                images[key].originX = 1 - images[key].originX;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setText(value) {\r\n        if (value == null) {\r\n            value = '';\r\n        } else if (Array.isArray(value)) {\r\n            value = value.join('\\n');\r\n        } else {\r\n            value = value.toString();\r\n        }\r\n\r\n        if (value === this._text) {\r\n            return this;\r\n        }\r\n\r\n        this._text = value;\r\n        this.updateText();\r\n\r\n        return this;\r\n    }\r\n\r\n    setPadding(left, top, right, bottom) {\r\n        if (typeof left === 'object') {\r\n            var config = left;\r\n\r\n            //  If they specify x and/or y this applies to all\r\n            var x = GetValue(config, 'x', null);\r\n\r\n            if (x !== null) {\r\n                left = x;\r\n                right = x;\r\n            } else {\r\n                left = GetValue(config, 'left', 0);\r\n                right = GetValue(config, 'right', left);\r\n            }\r\n\r\n            var y = GetValue(config, 'y', null);\r\n\r\n            if (y !== null) {\r\n                top = y;\r\n                bottom = y;\r\n            } else {\r\n                top = GetValue(config, 'top', 0);\r\n                bottom = GetValue(config, 'bottom', top);\r\n            }\r\n        } else {\r\n            if (left === undefined) {\r\n                left = 0;\r\n            }\r\n            if (top === undefined) {\r\n                top = left;\r\n            }\r\n            if (right === undefined) {\r\n                right = left;\r\n            }\r\n            if (bottom === undefined) {\r\n                bottom = top;\r\n            }\r\n        }\r\n\r\n        this.padding.left = left;\r\n        this.padding.top = top;\r\n        this.padding.right = right;\r\n        this.padding.bottom = bottom;\r\n\r\n        return this.updateText(false);\r\n    }\r\n\r\n    updateText(runWrap) {\r\n        if (runWrap === undefined) {\r\n            runWrap = true;\r\n        }\r\n        var canvasText = this.canvasText;\r\n\r\n        // wrap text to pens\r\n        var style = this.style;\r\n        if (runWrap) {\r\n            canvasText.updatePenManager(\r\n                this._text,\r\n                style.wrapMode,\r\n                style.wrapWidth,\r\n                style.lineHeight\r\n            );\r\n        }\r\n\r\n        // resize\r\n        var padding = this.padding;\r\n        var textWidth, textHeight;\r\n        var linesWidth = Math.ceil(canvasText.linesWidth);\r\n        if (style.fixedWidth === 0) {\r\n            this.width = linesWidth + padding.left + padding.right;\r\n            textWidth = linesWidth;\r\n        }\r\n        else {\r\n            this.width = style.fixedWidth;\r\n            textWidth = this.width - padding.left - padding.right;\r\n            if (textWidth < linesWidth) {\r\n                textWidth = linesWidth;\r\n            }\r\n        }\r\n        if (style.fixedHeight === 0) {\r\n            this.height = canvasText.linesHeight + padding.top + padding.bottom;\r\n            textHeight = canvasText.linesHeight;\r\n        }\r\n        else {\r\n            this.height = style.fixedHeight;\r\n            textHeight = this.height - padding.top - padding.bottom;\r\n            if (textHeight < canvasText.linesHeight) {\r\n                textHeight = canvasText.linesHeight;\r\n            }\r\n        }\r\n\r\n        var w = this.width;\r\n        var h = this.height;\r\n\r\n        this.updateDisplayOrigin();\r\n\r\n        var resolution = style.resolution;\r\n        w *= resolution;\r\n        h *= resolution;\r\n\r\n        w = Math.max(Math.ceil(w), 1);\r\n        h = Math.max(Math.ceil(h), 1);\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        if (canvas.width !== w || canvas.height !== h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            this.frame.setSize(w, h);\r\n        } else {\r\n            context.clearRect(0, 0, w, h);\r\n        }\r\n\r\n        context.save();\r\n        context.scale(resolution, resolution);\r\n\r\n        // draw\r\n        var startX = (!this.style.rtl) ? padding.left : padding.right;\r\n        var startY = padding.top;\r\n        canvasText.draw(\r\n            startX,\r\n            startY,\r\n            textWidth,\r\n            textHeight,\r\n        );\r\n\r\n        context.restore();\r\n\r\n        if (this.renderer && this.renderer.gl) {\r\n            this.frame.source.glTexture = this.renderer.canvasToTexture(canvas, this.frame.source.glTexture, true);\r\n            if (typeof WEBGL_DEBUG) {\r\n                this.frame.glTexture.spectorMetadata = { textureKey: 'BBCodeText Game Object' };\r\n            }\r\n        }\r\n\r\n        this.dirty = true;\r\n\r\n        var input = this.input;\r\n\r\n        if (input && !input.customHitArea) {\r\n            input.hitArea.width = this.width;\r\n            input.hitArea.height = this.height;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    toJSON() {\r\n        var out = Components.ToJSON(this);\r\n\r\n        //  Extra Text data is added here\r\n\r\n        var data = {\r\n            autoRound: this.autoRound,\r\n            text: this._text,\r\n            style: this.style.toJSON(),\r\n            resolution: this.resolution,\r\n            padding: {\r\n                left: this.padding.left,\r\n                right: this.padding.right,\r\n                top: this.padding.top,\r\n                bottom: this.padding.bottom\r\n            }\r\n        };\r\n\r\n        out.data = data;\r\n\r\n        return out;\r\n    }\r\n\r\n    setInteractive(hitArea, hitAreaCallback, dropZone) {\r\n        var isInteractived = !!this.input;\r\n\r\n        GameObject.prototype.setInteractive.call(this, hitArea, hitAreaCallback, dropZone);\r\n\r\n        if (!isInteractived) {\r\n            this.canvasText.setInteractive();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setUrlTagCursorStyle(cursor) {\r\n        this.urlTagCursorStyle = cursor;\r\n        return this;\r\n    }\r\n\r\n    get urlTagCursorStyle() {\r\n        return this.canvasText.urlTagCursorStyle;\r\n    }\r\n\r\n    set urlTagCursorStyle(value) {\r\n        this.canvasText.urlTagCursorStyle = value;\r\n    }\r\n\r\n    getWrappedText(text, start, end) {\r\n        if (typeof (text) === 'number') {\r\n            end = start;\r\n            start = text;\r\n            text = undefined;\r\n        }\r\n        text = this.canvasText.getText(text, start, end, true);\r\n        return text.split(SPLITREGEXP);\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        if (typeof (text) === 'number') {\r\n            end = start;\r\n            start = text;\r\n            text = undefined;\r\n        }\r\n        return this.canvasText.getPlainText(text, start, end);\r\n    }\r\n\r\n    getText(text, start, end, wrap) {\r\n        if (typeof (text) === 'number') {\r\n            wrap = end;\r\n            end = start;\r\n            start = text;\r\n            text = undefined;\r\n        }\r\n        if (wrap === undefined) {\r\n            wrap = false;\r\n        }\r\n        return this.canvasText.getText(text, start, end, wrap);\r\n    }\r\n\r\n    getSubString(text, start, end) {\r\n        if (typeof (text) === 'number') {\r\n            end = start;\r\n            start = text;\r\n            text = undefined;\r\n        }\r\n        return this.getText(text, start, end);\r\n    }\r\n\r\n    copyPenManager(penManager) {\r\n        return this.canvasText.copyPenManager(penManager);\r\n    }\r\n\r\n    getPenManager(text, penManager) {\r\n        return this.canvasText.getPenManager(text, penManager);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    resize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    get imageManager() {\r\n        if (!this._imageManager) {\r\n            this._imageManager = new ImageManager(this.scene);\r\n        }\r\n        return this._imageManager;\r\n    }\r\n\r\n    addImage(key, config) {\r\n        this.imageManager.add(key, config);\r\n        return this;\r\n    }\r\n\r\n    drawAreaBounds(graphics, color) {\r\n        this.canvasText.hitAreaManager.drawBounds(graphics, color, this);\r\n        return this;\r\n    }\r\n\r\n    generateTexture(key, x, y, width, height) {\r\n        var srcCanvas = this.canvas;\r\n        if (width === undefined) {\r\n            width = srcCanvas.width;\r\n        } else {\r\n            width *= this.resolution;\r\n        }\r\n        if (height === undefined) {\r\n            height = srcCanvas.height;\r\n        } else {\r\n            height *= this.resolution;\r\n        }\r\n\r\n        CopyCanvasToTexture(this.scene, srcCanvas, key, x, y, width, height);\r\n        return this;\r\n    }\r\n}\r\n\r\nvar methods = {\r\n    appendText: AppendText,\r\n}\r\n\r\nObject.assign(\r\n    Text.prototype,\r\n    methods\r\n)\r\nexport default Text;", "var SplitText = function (text, mode) {\r\n    var TagRegex = this.tagRegex;\r\n\r\n    var result = [];\r\n    var charIdx = 0;\r\n    var rawMode = false,\r\n        escMode = false;\r\n    while (true) {\r\n        var regexResult = TagRegex.RE_SPLITTEXT.exec(text);\r\n        if (!regexResult) {\r\n            break;\r\n        }\r\n\r\n        var match = regexResult[0];\r\n        if (escMode) {\r\n            if (TagRegex.RE_ESC_CLOSE.test(match)) {\r\n                escMode = false;\r\n            } else {\r\n                continue; // Skip other tags\r\n            }\r\n\r\n        } else if (rawMode) {\r\n            if (TagRegex.RE_RAW_CLOSE.test(match)) {\r\n                rawMode = false;\r\n            } else {\r\n                continue; // Skip other tags\r\n            }\r\n\r\n        } else {\r\n            if (TagRegex.RE_ESC_OPEN.test(match)) {\r\n                escMode = true;\r\n            } else if (TagRegex.RE_RAW_OPEN.test(match)) {\r\n                rawMode = true;\r\n            }\r\n        }\r\n\r\n        var matchEnd = TagRegex.RE_SPLITTEXT.lastIndex;\r\n        var matchStart = matchEnd - match.length;\r\n\r\n        if (charIdx < matchStart) {\r\n            var content = text.substring(charIdx, matchStart);\r\n            result.push(content);\r\n        }\r\n\r\n        if (mode === undefined) {\r\n            result.push(match);\r\n        }\r\n\r\n        charIdx = matchEnd;\r\n    }\r\n\r\n    var totalLen = text.length;\r\n    if (charIdx < totalLen) { // Push remainder string\r\n        result.push(text.substring(charIdx, totalLen));\r\n    }\r\n\r\n    return result; // [text,...]\r\n}\r\n\r\nexport default SplitText;", "const PROP_REMOVE = false;\r\nconst PROP_ADD = true;\r\n\r\nvar GETPROP_RESULT = {\r\n    plainText: null,\r\n    prevProp: null\r\n};\r\n\r\nvar TagTextToProp = function (text, prevProp) {\r\n    var TagRegex = this.tagRegex;\r\n\r\n    // text : result of splitText()\r\n    if (prevProp == null) {\r\n        prevProp = {};\r\n    }\r\n    var plainText = '';\r\n\r\n    // close image tag\r\n    if (prevProp.img) {\r\n        UpdateProp(prevProp, PROP_REMOVE, 'img');\r\n    }\r\n\r\n    if (prevProp.esc) {\r\n        if (TagRegex.RE_ESC_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'esc');\r\n        } else {\r\n            plainText = text;\r\n        }\r\n\r\n    } else if (prevProp.raw) {\r\n        if (TagRegex.RE_RAW_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'raw');\r\n        } else {\r\n            plainText = text;\r\n        }\r\n\r\n    } else {\r\n        if (TagRegex.RE_ESC_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'esc', true);\r\n        } else if (TagRegex.RE_ESC_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'esc');\r\n\r\n        } else if (TagRegex.RE_RAW_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'raw', true);\r\n        } else if (TagRegex.RE_RAW_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'raw');\r\n\r\n        } else if (TagRegex.RE_BLOD_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'b', true);\r\n        } else if (TagRegex.RE_BLOD_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'b');\r\n\r\n        } else if (TagRegex.RE_ITALICS_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'i', true);\r\n        } else if (TagRegex.RE_ITALICS_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'i');\r\n\r\n        } else if (TagRegex.RE_WEIGHT_OPEN.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_WEIGHT_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'weight', innerMatch[1]);\r\n        } else if (TagRegex.RE_WEIGHT_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'weight');\r\n\r\n        } else if (TagRegex.RE_SIZE_OPEN.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_SIZE_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'size', `${innerMatch[1]}px`);\r\n        } else if (TagRegex.RE_SIZE_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'size');\r\n\r\n        } else if (TagRegex.RE_COLOR_OPEN.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_COLOR_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'color', innerMatch[1]);\r\n        } else if (TagRegex.RE_COLOR_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'color');\r\n\r\n        } else if (TagRegex.RE_UNDERLINE_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'u', true);\r\n        } else if (TagRegex.RE_UNDERLINE_OPENC.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_UNDERLINE_OPENC);\r\n            UpdateProp(prevProp, PROP_ADD, 'u', innerMatch[1]);\r\n        } else if (TagRegex.RE_UNDERLINE_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'u');\r\n\r\n        } else if (TagRegex.RE_STRIKETHROUGH_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 's', true);\r\n        } else if (TagRegex.RE_STRIKETHROUGH_OPENC.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_STRIKETHROUGH_OPENC);\r\n            UpdateProp(prevProp, PROP_ADD, 's', innerMatch[1]);\r\n        } else if (TagRegex.RE_STRIKETHROUGH_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 's');\r\n\r\n        } else if (TagRegex.RE_SHADOW_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'shadow', true);\r\n        } else if (TagRegex.RE_SHADOW_OPENC.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_SHADOW_OPENC);\r\n            UpdateProp(prevProp, PROP_ADD, 'shadow', innerMatch[1]);\r\n        } else if (TagRegex.RE_SHADOW_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'shadow');\r\n\r\n        } else if (TagRegex.RE_STROKE_OPEN.test(text)) {\r\n            UpdateProp(prevProp, PROP_ADD, 'stroke', true);\r\n        } else if (TagRegex.RE_STROKE_OPENC.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_STROKE_OPENC);\r\n            UpdateProp(prevProp, PROP_ADD, 'stroke', innerMatch[1]);\r\n        } else if (TagRegex.RE_STROKE_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'stroke');\r\n\r\n        } else if (TagRegex.RE_OFFSETY_OPEN.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_OFFSETY_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'y', parseFloat(innerMatch[1]));\r\n        } else if (TagRegex.RE_OFFSETY_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'y');\r\n\r\n        } else if (TagRegex.RE_IMAGE_OPEN.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_IMAGE_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'img', innerMatch[1]);\r\n        } else if (TagRegex.RE_IMAGE_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'img');\r\n\r\n        } else if (TagRegex.RE_AREA_OPEN.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_AREA_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'area', innerMatch[1]);\r\n        } else if (TagRegex.RE_AREA_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'area');\r\n\r\n        } else if (TagRegex.RE_URL_OPEN.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_URL_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'url', innerMatch[1]);\r\n        } else if (TagRegex.RE_URL_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'url');\r\n\r\n        } else if (TagRegex.RE_ALIGN_OPEN.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_ALIGN_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'align', innerMatch[1]);\r\n        } else if (TagRegex.RE_ALIGN_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'align');\r\n\r\n        } else if (TagRegex.RE_ID_OPEN.test(text)) {\r\n            var innerMatch = text.match(TagRegex.RE_ID_OPEN);\r\n            UpdateProp(prevProp, PROP_ADD, 'id', innerMatch[1]);\r\n        } else if (TagRegex.RE_ID_CLOSE.test(text)) {\r\n            UpdateProp(prevProp, PROP_REMOVE, 'id');\r\n\r\n        } else {\r\n            plainText = text;\r\n        }\r\n    }\r\n\r\n    var result = GETPROP_RESULT;\r\n    result.plainText = plainText;\r\n    result.prop = prevProp;\r\n    return result;\r\n}\r\n\r\nvar UpdateProp = function (prop, op, key, value) {\r\n    if (op === PROP_ADD) {\r\n        // PROP_ADD     \r\n        prop[key] = value;\r\n    } else {\r\n        // PROP_REMOVE        \r\n        if (prop.hasOwnProperty(key)) {\r\n            delete prop[key];\r\n        }\r\n    }\r\n\r\n    return prop;\r\n};\r\n\r\nexport default TagTextToProp;", "import TextStyle from '../../../textbase/textstyle/TextStyle.js';\r\n\r\nvar PropToContextStyle = function (defaultStyle, prop) {\r\n    var result = STYLE_RESULT;\r\n    if (!prop.hasOwnProperty('img')) {\r\n        result.image = null;\r\n\r\n        if (prop.hasOwnProperty('family')) {\r\n            result.fontFamily = prop.family;\r\n        } else {\r\n            result.fontFamily = defaultStyle.fontFamily;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('size')) {\r\n            var size = prop.size;\r\n            if (typeof (size) === 'number') {\r\n                size = `${size}px`;\r\n            }\r\n            result.fontSize = size;\r\n        } else {\r\n            result.fontSize = defaultStyle.fontSize;\r\n        }\r\n        result.fontStyle = GetFontStyle(prop);\r\n\r\n        if (prop.hasOwnProperty('color')) {\r\n            result.color = prop.color;\r\n        } else {\r\n            result.color = defaultStyle.color;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('stroke')) {\r\n            if (prop.stroke === true) {\r\n                result.stroke = defaultStyle.stroke;\r\n                result.strokeThickness = defaultStyle.strokeThickness;\r\n            } else {\r\n                result.stroke = prop.stroke;\r\n                result.strokeThickness = defaultStyle.strokeThickness;\r\n            }\r\n        } else {\r\n            result.stroke = defaultStyle.stroke;\r\n            result.strokeThickness = 0;\r\n        }\r\n    } else {\r\n        result.image = prop.img;\r\n    }\r\n\r\n    if (prop.hasOwnProperty('shadow')) {\r\n        if (prop.shadow === true) {\r\n            result.shadowColor = defaultStyle.shadowColor;\r\n            result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = defaultStyle.shadowBlur;\r\n            result.shadowStroke = true;\r\n            result.shadowFill = true;\r\n        } else {\r\n            result.shadowColor = prop.shadow;\r\n            result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = defaultStyle.shadowBlur;\r\n            result.shadowStroke = true;\r\n            result.shadowFill = true;\r\n        }\r\n    } else {\r\n        result.shadowColor = '#000';\r\n        result.shadowOffsetX = 0;\r\n        result.shadowOffsetY = 0;\r\n        result.shadowBlur = 0;\r\n        result.shadowStroke = false;\r\n        result.shadowFill = false;\r\n    }\r\n\r\n    if (prop.hasOwnProperty('u')) {\r\n        if (prop.u === true) {\r\n            result.underlineColor = defaultStyle.underlineColor;\r\n            result.underlineThickness = defaultStyle.underlineThickness;\r\n            result.underlineOffset = defaultStyle.underlineOffset;\r\n        } else {\r\n            result.underlineColor = prop.u;\r\n            result.underlineThickness = defaultStyle.underlineThickness;\r\n            result.underlineOffset = defaultStyle.underlineOffset;\r\n        }\r\n    } else {\r\n        result.underlineColor = '#000';\r\n        result.underlineThickness = 0;\r\n        result.underlineOffset = 0;\r\n    }\r\n\r\n    if (prop.hasOwnProperty('s')) {\r\n        if (prop.s === true) {\r\n            result.strikethroughColor = defaultStyle.strikethroughColor;\r\n            result.strikethroughThickness = defaultStyle.strikethroughThickness;\r\n            result.strikethroughOffset = defaultStyle.strikethroughOffset;\r\n        } else {\r\n            result.strikethroughColor = prop.s;\r\n            result.strikethroughThickness = defaultStyle.strikethroughThickness;\r\n            result.strikethroughOffset = defaultStyle.strikethroughOffset;\r\n        }\r\n    } else {\r\n        result.strikethroughColor = '#000';\r\n        result.strikethroughThickness = 0;\r\n        result.strikethroughOffset = 0;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nvar GetFontStyle = function (prop) {\r\n    var isBold = prop.b;\r\n    var weight = prop.weight;\r\n    var isItalic = prop.i;\r\n\r\n    if (isBold || weight || isItalic) {\r\n        if (isItalic) {\r\n            if (isBold) {\r\n                return 'bold italic';\r\n            } else if (weight) {\r\n                return `${weight} italic`;\r\n            } else {\r\n                return 'italic';\r\n            }\r\n        } else {  // !isItalic\r\n            if (isBold) {\r\n                return 'bold';\r\n            } else {\r\n                return weight.toString();\r\n            }\r\n        }\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n\r\n\r\nvar STYLE_RESULT = new TextStyle();\r\n\r\nexport default PropToContextStyle;", "var PropToTagText = function (text, prop, prevProp) {\r\n    if (prevProp == null) {\r\n        prevProp = EMPTYPROP;\r\n    }\r\n\r\n    var delimiterLeft = this.delimiters[0];\r\n    var delimiterRight = this.delimiters[1];\r\n\r\n    var headers = [];\r\n\r\n    for (var k in prevProp) {\r\n        if (!prop.hasOwnProperty(k)) {\r\n            headers.push(`${delimiterLeft}/${k}${delimiterRight}`);\r\n        }\r\n    }\r\n\r\n    for (var k in prop) {\r\n        var value = prop[k];\r\n\r\n\r\n        if (k === 'img') {\r\n            // Each 'img' prop will draw an image\r\n        } else {\r\n            if (prevProp[k] === value) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        switch (k) {\r\n            case 'size':\r\n                headers.push(`${delimiterLeft}size=${value.replace('px', '')}${delimiterRight}`);\r\n                break;\r\n\r\n            case 'color':\r\n            case 'weight':\r\n            case 'stroke':\r\n            case 'y':\r\n            case 'img':\r\n            case 'area':\r\n            case 'url':\r\n            case 'align':\r\n            case 'id':\r\n                headers.push(`${delimiterLeft}${k}=${value}${delimiterRight}`);\r\n                break;\r\n\r\n            case 'u':\r\n            case 's':\r\n                if (value === true) {\r\n                    headers.push(`${delimiterLeft}${k}${delimiterRight}`);\r\n                } else {\r\n                    headers.push(`${delimiterLeft}${k}=${value}${delimiterRight}`)\r\n                }\r\n                break;\r\n\r\n            default:\r\n                headers.push(`${delimiterLeft}${k}${delimiterRight}`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    headers.push(text);\r\n\r\n    return headers.join('');\r\n}\r\n\r\nvar EMPTYPROP = {};\r\n\r\n\r\nexport default PropToTagText;", "// https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\r\n\r\nvar EscapeRegex = function (s) {\r\n    return s\r\n        .replace(re0, '\\\\$&')\r\n        .replace(re1, '\\\\x2d');\r\n}\r\n\r\nvar re0 = /[|\\\\{}()[\\]^$+*?.]/g;\r\nvar re1 = /-/g;\r\n\r\nexport default EscapeRegex;", "import EscapeRegex from '../../../../utils/string/EscapeRegex.js';\r\n\r\nvar DelimiterLeftSave;\r\nvar DelimiterRightSave;\r\nvar TagRegexSave = {};\r\n\r\nvar GetOpenTagRegString = function (delimiterLeft, delimiterRight, tagName, param) {\r\n    if (param === undefined) {\r\n        return `${delimiterLeft}${tagName}${delimiterRight}`;\r\n    } else {\r\n        return `${delimiterLeft}${tagName}=(${param})${delimiterRight}`;\r\n    }\r\n}\r\nvar GetCloseTagRegString = function (delimiterLeft, delimiterRight, tagName) {\r\n    return `${delimiterLeft}\\/${tagName}${delimiterRight}`;\r\n}\r\n\r\nvar GenerateStringRegEx = function (delimiterRight) {\r\n    return `[^${delimiterRight}]+`\r\n}\r\nvar NUMBER_PARAM = '[-.0-9]+';\r\n\r\nvar colorParameterList = [\r\n    '[a-zA-Z]+',      // 'white'\r\n    '#[0-9abcdef]+',  // '#FFFFFF'\r\n    'rgba?\\\\(\\s*[.0-9]+\\s*(,\\s*[.0-9]+\\s*){2,3}\\\\)',  // rgb(255,255,255), or rgba(255,255,255,1)\r\n]\r\nvar COLOR_PARAM = colorParameterList.join('|');  // '[a-z]+|#[0-9abcdef]+'\r\n\r\nvar SetDelimiters = function (delimiterLeft, delimiterRight) {\r\n    if (delimiterRight === undefined) {\r\n        var delimeters = delimiterLeft;\r\n        delimiterLeft = delimeters[0];\r\n        delimiterRight = delimeters[1];\r\n    }\r\n\r\n    if ((DelimiterLeftSave === delimiterLeft) && (DelimiterRightSave === delimiterRight)) {\r\n        return false;\r\n    }\r\n\r\n    DelimiterLeftSave = delimiterLeft;\r\n    DelimiterRightSave = delimiterRight;\r\n\r\n    delimiterLeft = EscapeRegex(delimiterLeft);\r\n    delimiterRight = EscapeRegex(delimiterRight);\r\n\r\n    var STR_PARAM = GenerateStringRegEx(delimiterRight);\r\n\r\n    var ESC = 'esc';\r\n    var ESC_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, ESC);\r\n    var ESC_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, ESC);\r\n\r\n    var RAW = 'raw';\r\n    var RAW_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, RAW);\r\n    var RAW_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, RAW);\r\n\r\n    var BLOD = 'b';\r\n    var BLOD_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, BLOD);\r\n    var BLOD_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, BLOD);\r\n\r\n    var ITALICS = 'i';\r\n    var ITALICS_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, ITALICS);\r\n    var ITALICS_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, ITALICS);\r\n\r\n    var WEIGHT = 'weight';\r\n    var WEIGHT_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, WEIGHT, NUMBER_PARAM);\r\n    var WEIGHT_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, WEIGHT);\r\n\r\n    var SIZE = 'size';\r\n    var SIZE_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, SIZE, NUMBER_PARAM);\r\n    var SIZE_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, SIZE);\r\n\r\n    var COLOR = 'color';\r\n    var COLOR_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, COLOR, COLOR_PARAM);\r\n    var COLOR_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, COLOR);\r\n\r\n    var UNDERLINE = 'u';\r\n    var UNDERLINE_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, UNDERLINE);\r\n    var UNDERLINE_OPENC = GetOpenTagRegString(delimiterLeft, delimiterRight, UNDERLINE, COLOR_PARAM);\r\n    var UNDERLINE_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, UNDERLINE);\r\n\r\n    var STRIKETHROUGH = 's';\r\n    var STRIKETHROUGH_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, STRIKETHROUGH);\r\n    var STRIKETHROUGH_OPENC = GetOpenTagRegString(delimiterLeft, delimiterRight, STRIKETHROUGH, COLOR_PARAM);\r\n    var STRIKETHROUGH_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, STRIKETHROUGH);\r\n\r\n    var SHADOW = 'shadow';\r\n    var SHADOW_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, SHADOW);\r\n    var SHADOW_OPENC = GetOpenTagRegString(delimiterLeft, delimiterRight, SHADOW, COLOR_PARAM);\r\n    var SHADOW_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, SHADOW);\r\n\r\n    var STROKE = 'stroke';\r\n    var STROKE_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, STROKE);\r\n    var STROKE_OPENC = GetOpenTagRegString(delimiterLeft, delimiterRight, STROKE, COLOR_PARAM);\r\n    var STROKE_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, STROKE);\r\n\r\n    var OFFSETY = 'y';\r\n    var OFFSETY_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, OFFSETY, NUMBER_PARAM);\r\n    var OFFSETY_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, OFFSETY);\r\n\r\n    var IMAGE = 'img';\r\n    var IMAGE_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, IMAGE, STR_PARAM);\r\n    var IMAGE_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, IMAGE);\r\n\r\n    var AREA = 'area';\r\n    var AREA_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, AREA, STR_PARAM);\r\n    var AREA_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, AREA);\r\n\r\n    var URL = 'url';\r\n    var URL_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, URL, STR_PARAM);\r\n    var URL_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, URL);\r\n\r\n    var ALIGN = 'align';\r\n    var ALIGN_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, ALIGN, STR_PARAM);\r\n    var ALIGN_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, ALIGN);\r\n\r\n    var ID = 'id';\r\n    var ID_OPEN = GetOpenTagRegString(delimiterLeft, delimiterRight, ID, STR_PARAM);\r\n    var ID_CLOSE = GetCloseTagRegString(delimiterLeft, delimiterRight, ID);\r\n\r\n    TagRegexSave.RE_ESC_OPEN = new RegExp(ESC_OPEN, 'i');\r\n    TagRegexSave.RE_ESC_CLOSE = new RegExp(ESC_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_RAW_OPEN = new RegExp(RAW_OPEN, 'i');\r\n    TagRegexSave.RE_RAW_CLOSE = new RegExp(RAW_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_BLOD_OPEN = new RegExp(BLOD_OPEN, 'i');\r\n    TagRegexSave.RE_BLOD_CLOSE = new RegExp(BLOD_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_ITALICS_OPEN = new RegExp(ITALICS_OPEN, 'i');\r\n    TagRegexSave.RE_ITALICS_CLOSE = new RegExp(ITALICS_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_WEIGHT_OPEN = new RegExp(WEIGHT_OPEN, 'i');\r\n    TagRegexSave.RE_WEIGHT_CLOSE = new RegExp(WEIGHT_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_SIZE_OPEN = new RegExp(SIZE_OPEN, 'i');\r\n    TagRegexSave.RE_SIZE_CLOSE = new RegExp(SIZE_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_COLOR_OPEN = new RegExp(COLOR_OPEN, 'i');\r\n    TagRegexSave.RE_COLOR_CLOSE = new RegExp(COLOR_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_UNDERLINE_OPEN = new RegExp(UNDERLINE_OPEN, 'i');\r\n    TagRegexSave.RE_UNDERLINE_OPENC = new RegExp(UNDERLINE_OPENC, 'i');\r\n    TagRegexSave.RE_UNDERLINE_CLOSE = new RegExp(UNDERLINE_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_STRIKETHROUGH_OPEN = new RegExp(STRIKETHROUGH_OPEN, 'i');\r\n    TagRegexSave.RE_STRIKETHROUGH_OPENC = new RegExp(STRIKETHROUGH_OPENC, 'i');\r\n    TagRegexSave.RE_STRIKETHROUGH_CLOSE = new RegExp(STRIKETHROUGH_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_SHADOW_OPEN = new RegExp(SHADOW_OPEN, 'i');\r\n    TagRegexSave.RE_SHADOW_OPENC = new RegExp(SHADOW_OPENC, 'i');\r\n    TagRegexSave.RE_SHADOW_CLOSE = new RegExp(SHADOW_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_STROKE_OPEN = new RegExp(STROKE_OPEN, 'i');\r\n    TagRegexSave.RE_STROKE_OPENC = new RegExp(STROKE_OPENC, 'i');\r\n    TagRegexSave.RE_STROKE_CLOSE = new RegExp(STROKE_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_OFFSETY_OPEN = new RegExp(OFFSETY_OPEN, 'i');\r\n    TagRegexSave.RE_OFFSETY_CLOSE = new RegExp(OFFSETY_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_IMAGE_OPEN = new RegExp(IMAGE_OPEN, 'i');\r\n    TagRegexSave.RE_IMAGE_CLOSE = new RegExp(IMAGE_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_AREA_OPEN = new RegExp(AREA_OPEN, 'i')\r\n    TagRegexSave.RE_AREA_CLOSE = new RegExp(AREA_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_URL_OPEN = new RegExp(URL_OPEN, 'i')\r\n    TagRegexSave.RE_URL_CLOSE = new RegExp(URL_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_ALIGN_OPEN = new RegExp(ALIGN_OPEN, 'i')\r\n    TagRegexSave.RE_ALIGN_CLOSE = new RegExp(ALIGN_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_ID_OPEN = new RegExp(ID_OPEN, 'i')\r\n    TagRegexSave.RE_ID_CLOSE = new RegExp(ID_CLOSE, 'i');\r\n\r\n    TagRegexSave.RE_SPLITTEXT = new RegExp([\r\n        RAW_OPEN, RAW_CLOSE,\r\n        ESC_OPEN, ESC_CLOSE,\r\n\r\n        BLOD_OPEN, BLOD_CLOSE,\r\n        ITALICS_OPEN, ITALICS_CLOSE,\r\n        WEIGHT_OPEN, WEIGHT_CLOSE,\r\n\r\n        SIZE_OPEN, SIZE_CLOSE,\r\n        COLOR_OPEN, COLOR_CLOSE,\r\n        UNDERLINE_OPEN, UNDERLINE_OPENC, UNDERLINE_CLOSE,\r\n        STRIKETHROUGH_OPEN, STRIKETHROUGH_OPENC, STRIKETHROUGH_CLOSE,\r\n        SHADOW_OPEN, SHADOW_OPENC, SHADOW_CLOSE,\r\n        STROKE_OPEN, STROKE_OPENC, STROKE_CLOSE,\r\n        OFFSETY_OPEN, OFFSETY_CLOSE,\r\n        IMAGE_OPEN, IMAGE_CLOSE,\r\n        AREA_OPEN, AREA_CLOSE,\r\n        URL_OPEN, URL_CLOSE,\r\n        ALIGN_OPEN, ALIGN_CLOSE,\r\n        ID_OPEN, ID_CLOSE\r\n    ].join('|'), 'ig');\r\n\r\n    return true;\r\n}\r\n\r\nvar GetTagRegex = function (delimiterLeft, delimiterRight) {\r\n    if (delimiterLeft !== undefined) {\r\n        SetDelimiters(delimiterLeft, delimiterRight);\r\n    }\r\n\r\n    return Object.assign({}, TagRegexSave);\r\n}\r\n\r\nexport {\r\n    SetDelimiters,\r\n    GetTagRegex,\r\n}", "import SplitText from './SplitText.js';\r\nimport TagTextToProp from './TagTextToProp.js';\r\nimport PropToContextStyle from './PropToContextStyle.js'\r\nimport PropToTagText from './PropToTagText.js';\r\nimport { GetTagRegex, SetDelimiters } from './TagRegex.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass Parser {\r\n    constructor(style) {\r\n        var delimiters = GetValue(style, 'delimiters', '[]');\r\n        this.tagRegex = GetTagRegex(delimiters);\r\n        this.delimiters = delimiters;\r\n    }\r\n\r\n    getStrokeThinkness(defaultStyle, prop) {\r\n        var strokeThickness;\r\n        if (prop.hasOwnProperty('stroke')) {\r\n            strokeThickness = defaultStyle.strokeThickness;\r\n        } else {\r\n            strokeThickness = 0;\r\n        }\r\n        return strokeThickness;\r\n    }\r\n\r\n    setDelimiters(delimiterLeft, delimiterRight) {\r\n        if (SetDelimiters(delimiterLeft, delimiterRight)) {\r\n            this.tagRegex = GetTagRegex();\r\n        }\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nvar methods = {\r\n    splitText: SplitText,\r\n    tagTextToProp: TagTextToProp,\r\n    propToContextStyle: PropToContextStyle,\r\n    propToTagText: PropToTagText,\r\n}\r\n\r\nObject.assign(\r\n    Parser.prototype,\r\n    methods\r\n);\r\n\r\nexport default Parser;", "import Text from '../textbase/Text.js'\r\nimport ParserClass from './parser/Parser.js';\r\n\r\nclass BBCodeText extends Text {\r\n    constructor(scene, x, y, text, style) {\r\n        var parser = new ParserClass(style);\r\n        super(scene, x, y, text, style, 'rexBBCodeText', parser);\r\n    }\r\n\r\n    setDelimiters(delimiterLeft, delimiterRight) {\r\n        this.parse.setDelimiters(delimiterLeft, delimiterRight);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default BBCodeText;", "import BBCodeText from './BBCodeText.js';\r\n\r\nexport default function (x, y, text, style) {\r\n    var gameObject = new BBCodeText(this.scene, x, y, text, style);\r\n    this.scene.add.existing(gameObject);\r\n    return gameObject;\r\n};", "import BBCodeText from './BBCodeText.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst BuildGameObject = Phaser.GameObjects.BuildGameObject;\r\n\r\nexport default function (config, addToScene) {\r\n    if (config === undefined) { config = {}; }\r\n    if (addToScene !== undefined) {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     backgroundColor2: [ 'backgroundColor2', null ],\r\n    //     backgroundHorizontalGradient: ['backgroundHorizontalGradient', true],\r\n    //     backgroundStrokeColor: ['backgroundStrokeColor', null],\r\n    //     backgroundStrokeLineWidth: ['backgroundStrokeLineWidth', 2],\r\n    //     backgroundCornerRadius: ['backgroundCornerRadius', 0],\r\n    //     backgroundCornerIteration: ['backgroundCornerIteration', null],    \r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}  \r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null) {\r\n        style.padding = padding;\r\n    }\r\n\r\n    var gameObject = new BBCodeText(this.scene, 0, 0, content, style);\r\n    BuildGameObject(this.scene, gameObject, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    gameObject.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n\r\n    return gameObject;\r\n};", "var IsInValidKey = function (keys) {\r\n    return (keys == null) || (keys === '') || (keys.length === 0);\r\n};\r\n\r\nvar GetEntry = function (target, keys, defaultEntry) {\r\n    var entry = target;\r\n    if (IsInValidKey(keys)) {\r\n        //entry = root;\r\n    } else {\r\n        if (typeof (keys) === 'string') {\r\n            keys = keys.split('.');\r\n        }\r\n\r\n        var key;\r\n        for (var i = 0, cnt = keys.length; i < cnt; i++) {\r\n            key = keys[i];\r\n            if ((entry[key] == null) || (typeof (entry[key]) !== 'object')) {\r\n                var newEntry;\r\n                if (i === cnt - 1) {\r\n                    if (defaultEntry === undefined) {\r\n                        newEntry = {};\r\n                    } else {\r\n                        newEntry = defaultEntry;\r\n                    }\r\n                } else {\r\n                    newEntry = {};\r\n                }\r\n\r\n                entry[key] = newEntry;\r\n            }\r\n\r\n            entry = entry[key];\r\n        }\r\n    }\r\n\r\n    return entry;\r\n};\r\n\r\nvar SetValue = function (target, keys, value, delimiter) {\r\n    if (delimiter === undefined) {\r\n        delimiter = '.';\r\n    }\r\n\r\n    // no object\r\n    if (typeof (target) !== 'object') {\r\n        return;\r\n    }\r\n\r\n    // invalid key\r\n    else if (IsInValidKey(keys)) {\r\n        // don't erase target\r\n        if (value == null) {\r\n            return;\r\n        }\r\n        // set target to another object\r\n        else if (typeof (value) === 'object') {\r\n            target = value;\r\n        }\r\n    } else {\r\n        if (typeof (keys) === 'string') {\r\n            keys = keys.split(delimiter);\r\n        }\r\n\r\n        var lastKey = keys.pop();\r\n        var entry = GetEntry(target, keys);\r\n        entry[lastKey] = value;\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\nexport default SetValue;", "import Factory from './gameobjects/tagtext/bbcodetext/Factory.js';\r\nimport Creator from './gameobjects/tagtext/bbcodetext/Creator.js';\r\nimport BBCodeText from './gameobjects/tagtext/bbcodetext/BBCodeText.js';\r\nimport SetValue from './utils/object/SetValue.js';\r\n\r\nclass BBCodeTextPlugin extends Phaser.Plugins.BasePlugin {\r\n\r\n    constructor(pluginManager) {\r\n        super(pluginManager);\r\n\r\n        //  Register our new Game Object type\r\n        pluginManager.registerGameObject('rexBBCodeText', Factory, Creator);\r\n    }\r\n\r\n    start() {\r\n        var eventEmitter = this.game.events;\r\n        eventEmitter.on('destroy', this.destroy, this);\r\n    }\r\n}\r\n\r\nSetValue(window, 'RexPlugins.GameObjects.BBCodeText', BBCodeText);\r\n\r\nexport default BBCodeTextPlugin;"],
  "mappings": "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",
  "names": ["Components", "CanvasPool", "GetValue", "GetValue", "NO_NEWLINE", "NO_NEWLINE", "RAW_NEWLINE", "WRAPPED_NEWLINE", "GetValue", "NO_WRAP", "NO_NEWLINE", "MeasureText", "text", "GetValue", "CanvasPool", "methods", "IsPlainObject", "CanvasPool", "GameObject", "GetValue", "methods", "GetValue", "methods", "GetAdvancedValue"]
}
